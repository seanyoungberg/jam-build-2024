apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-10-09T19:37:11Z"
    generateName: aws-node-
    labels:
      app.kubernetes.io/instance: aws-vpc-cni
      app.kubernetes.io/name: aws-node
      controller-revision-hash: 7f748678d7
      k8s-app: aws-node
      pod-template-generation: "2"
    name: aws-node-hmvr2
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: aws-node
      uid: 080eb1f3-b8af-448e-95f8-bd5bc7679957
    resourceVersion: "1529"
    uid: a0719d05-dfe8-4a2b-9e7d-8475d5356f2f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-104-128-124.ec2.internal
    containers:
    - env:
      - name: ADDITIONAL_ENI_TAGS
        value: '{}'
      - name: ANNOTATE_POD_IP
        value: "false"
      - name: AWS_VPC_CNI_NODE_PORT_SUPPORT
        value: "true"
      - name: AWS_VPC_ENI_MTU
        value: "9001"
      - name: AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG
        value: "false"
      - name: AWS_VPC_K8S_CNI_EXTERNALSNAT
        value: "false"
      - name: AWS_VPC_K8S_CNI_LOGLEVEL
        value: DEBUG
      - name: AWS_VPC_K8S_CNI_LOG_FILE
        value: /host/var/log/aws-routed-eni/ipamd.log
      - name: AWS_VPC_K8S_CNI_RANDOMIZESNAT
        value: prng
      - name: AWS_VPC_K8S_CNI_VETHPREFIX
        value: eni
      - name: AWS_VPC_K8S_PLUGIN_LOG_FILE
        value: /var/log/aws-routed-eni/plugin.log
      - name: AWS_VPC_K8S_PLUGIN_LOG_LEVEL
        value: DEBUG
      - name: CLUSTER_ENDPOINT
        value: https://260A3F90DADA104761D41ED5654BD337.gr7.us-east-1.eks.amazonaws.com
      - name: CLUSTER_NAME
        value: n6oy2vvr-K8s
      - name: DISABLE_INTROSPECTION
        value: "false"
      - name: DISABLE_METRICS
        value: "false"
      - name: DISABLE_NETWORK_RESOURCE_PROVISIONING
        value: "false"
      - name: ENABLE_IPv4
        value: "true"
      - name: ENABLE_IPv6
        value: "false"
      - name: ENABLE_POD_ENI
        value: "false"
      - name: ENABLE_PREFIX_DELEGATION
        value: "false"
      - name: ENABLE_SUBNET_DISCOVERY
        value: "true"
      - name: NETWORK_POLICY_ENFORCING_MODE
        value: standard
      - name: VPC_CNI_VERSION
        value: v1.18.3
      - name: VPC_ID
        value: vpc-0eeb81c2d824cec68
      - name: WARM_ENI_TARGET
        value: "1"
      - name: WARM_PREFIX_TARGET
        value: "1"
      - name: MY_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.18.3-eksbuild.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /app/grpc-health-probe
          - -addr=:50051
          - -connect-timeout=5s
          - -rpc-timeout=5s
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: aws-node
      ports:
      - containerPort: 61678
        hostPort: 61678
        name: metrics
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /app/grpc-health-probe
          - -addr=:50051
          - -connect-timeout=5s
          - -rpc-timeout=5s
        failureThreshold: 3
        initialDelaySeconds: 1
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 25m
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pp8sm
        readOnly: true
    - args:
      - --enable-ipv6=false
      - --enable-network-policy=false
      - --enable-cloudwatch-logs=false
      - --enable-policy-event-logs=false
      - --log-file=/var/log/aws-routed-eni/network-policy-agent.log
      - --metrics-bind-addr=:8162
      - --health-probe-bind-addr=:8163
      - --conntrack-cache-cleanup-period=300
      env:
      - name: MY_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent:v1.1.2-eksbuild.2
      imagePullPolicy: IfNotPresent
      name: aws-eks-nodeagent
      resources:
        requests:
          cpu: 25m
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /sys/fs/bpf
        name: bpf-pin-path
      - mountPath: /var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pp8sm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - env:
      - name: DISABLE_TCP_EARLY_DEMUX
        value: "false"
      - name: ENABLE_IPv6
        value: "false"
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.18.3-eksbuild.2
      imagePullPolicy: IfNotPresent
      name: aws-vpc-cni-init
      resources:
        requests:
          cpu: 25m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pp8sm
        readOnly: true
    nodeName: ip-10-104-128-124.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: aws-node
    serviceAccountName: aws-node
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /sys/fs/bpf
        type: ""
      name: bpf-pin-path
    - hostPath:
        path: /opt/cni/bin
        type: ""
      name: cni-bin-dir
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni-net-dir
    - hostPath:
        path: /var/log/aws-routed-eni
        type: DirectoryOrCreate
      name: log-dir
    - hostPath:
        path: /var/run/aws-node
        type: DirectoryOrCreate
      name: run-dir
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - name: kube-api-access-pp8sm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:37:13Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:37:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:37:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:37:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:37:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://71fa90a97459fb4c33d7c945e12e7150a4ee959c64a5c61ad1deefa2e678d76c
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent:v1.1.2-eksbuild.2
      imageID: 602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent@sha256:9744cc538f8f7afa925ada8afb4b32f6c9c7fb225383978c8f2701df1220bb9f
      lastState: {}
      name: aws-eks-nodeagent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-09T19:37:14Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /sys/fs/bpf
        name: bpf-pin-path
      - mountPath: /var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pp8sm
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://6b21050cece9cf3fe07ce24530582a95beeeefa42a24d729bc5051eff6dd582c
      image: 066635153087.dkr.ecr.il-central-1.amazonaws.com/amazon-k8s-cni:v1.18.3-eksbuild.2
      imageID: sha256:f65b58751c202d60e13020ac144c608728fd2fcea406d6cafac1e755d5839673
      lastState: {}
      name: aws-node
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-09T19:37:13Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pp8sm
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.104.128.124
    hostIPs:
    - ip: 10.104.128.124
    initContainerStatuses:
    - containerID: containerd://0cb8f0901974b7dca2a1919fc2bd02aebee1381db89764776e069b0f4fd517ba
      image: 066635153087.dkr.ecr.il-central-1.amazonaws.com/amazon-k8s-cni-init:v1.18.3-eksbuild.2
      imageID: sha256:addf38b09e5099344c33a451c35f4ae26b321549f05aa62c50b4e74fed9c26a6
      lastState: {}
      name: aws-vpc-cni-init
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://0cb8f0901974b7dca2a1919fc2bd02aebee1381db89764776e069b0f4fd517ba
          exitCode: 0
          finishedAt: "2024-10-09T19:37:13Z"
          reason: Completed
          startedAt: "2024-10-09T19:37:13Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pp8sm
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.104.128.124
    podIPs:
    - ip: 10.104.128.124
    qosClass: Burstable
    startTime: "2024-10-09T19:37:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-10-09T19:37:16Z"
    generateName: aws-node-
    labels:
      app.kubernetes.io/instance: aws-vpc-cni
      app.kubernetes.io/name: aws-node
      controller-revision-hash: 7f748678d7
      k8s-app: aws-node
      pod-template-generation: "2"
    name: aws-node-ptpj4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: aws-node
      uid: 080eb1f3-b8af-448e-95f8-bd5bc7679957
    resourceVersion: "1564"
    uid: 38b523e0-154e-4e6b-996a-0f84b2ecc1ee
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-104-0-216.ec2.internal
    containers:
    - env:
      - name: ADDITIONAL_ENI_TAGS
        value: '{}'
      - name: ANNOTATE_POD_IP
        value: "false"
      - name: AWS_VPC_CNI_NODE_PORT_SUPPORT
        value: "true"
      - name: AWS_VPC_ENI_MTU
        value: "9001"
      - name: AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG
        value: "false"
      - name: AWS_VPC_K8S_CNI_EXTERNALSNAT
        value: "false"
      - name: AWS_VPC_K8S_CNI_LOGLEVEL
        value: DEBUG
      - name: AWS_VPC_K8S_CNI_LOG_FILE
        value: /host/var/log/aws-routed-eni/ipamd.log
      - name: AWS_VPC_K8S_CNI_RANDOMIZESNAT
        value: prng
      - name: AWS_VPC_K8S_CNI_VETHPREFIX
        value: eni
      - name: AWS_VPC_K8S_PLUGIN_LOG_FILE
        value: /var/log/aws-routed-eni/plugin.log
      - name: AWS_VPC_K8S_PLUGIN_LOG_LEVEL
        value: DEBUG
      - name: CLUSTER_ENDPOINT
        value: https://260A3F90DADA104761D41ED5654BD337.gr7.us-east-1.eks.amazonaws.com
      - name: CLUSTER_NAME
        value: n6oy2vvr-K8s
      - name: DISABLE_INTROSPECTION
        value: "false"
      - name: DISABLE_METRICS
        value: "false"
      - name: DISABLE_NETWORK_RESOURCE_PROVISIONING
        value: "false"
      - name: ENABLE_IPv4
        value: "true"
      - name: ENABLE_IPv6
        value: "false"
      - name: ENABLE_POD_ENI
        value: "false"
      - name: ENABLE_PREFIX_DELEGATION
        value: "false"
      - name: ENABLE_SUBNET_DISCOVERY
        value: "true"
      - name: NETWORK_POLICY_ENFORCING_MODE
        value: standard
      - name: VPC_CNI_VERSION
        value: v1.18.3
      - name: VPC_ID
        value: vpc-0eeb81c2d824cec68
      - name: WARM_ENI_TARGET
        value: "1"
      - name: WARM_PREFIX_TARGET
        value: "1"
      - name: MY_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.18.3-eksbuild.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /app/grpc-health-probe
          - -addr=:50051
          - -connect-timeout=5s
          - -rpc-timeout=5s
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: aws-node
      ports:
      - containerPort: 61678
        hostPort: 61678
        name: metrics
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /app/grpc-health-probe
          - -addr=:50051
          - -connect-timeout=5s
          - -rpc-timeout=5s
        failureThreshold: 3
        initialDelaySeconds: 1
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 25m
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lh4w6
        readOnly: true
    - args:
      - --enable-ipv6=false
      - --enable-network-policy=false
      - --enable-cloudwatch-logs=false
      - --enable-policy-event-logs=false
      - --log-file=/var/log/aws-routed-eni/network-policy-agent.log
      - --metrics-bind-addr=:8162
      - --health-probe-bind-addr=:8163
      - --conntrack-cache-cleanup-period=300
      env:
      - name: MY_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent:v1.1.2-eksbuild.2
      imagePullPolicy: IfNotPresent
      name: aws-eks-nodeagent
      resources:
        requests:
          cpu: 25m
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /sys/fs/bpf
        name: bpf-pin-path
      - mountPath: /var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lh4w6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - env:
      - name: DISABLE_TCP_EARLY_DEMUX
        value: "false"
      - name: ENABLE_IPv6
        value: "false"
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.18.3-eksbuild.2
      imagePullPolicy: IfNotPresent
      name: aws-vpc-cni-init
      resources:
        requests:
          cpu: 25m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lh4w6
        readOnly: true
    nodeName: ip-10-104-0-216.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: aws-node
    serviceAccountName: aws-node
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /sys/fs/bpf
        type: ""
      name: bpf-pin-path
    - hostPath:
        path: /opt/cni/bin
        type: ""
      name: cni-bin-dir
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni-net-dir
    - hostPath:
        path: /var/log/aws-routed-eni
        type: DirectoryOrCreate
      name: log-dir
    - hostPath:
        path: /var/run/aws-node
        type: DirectoryOrCreate
      name: run-dir
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - name: kube-api-access-lh4w6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:37:17Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:37:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:37:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:37:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:37:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://546ba85d7014cf1eba4a45fd577de95ec6f140e74c1fb1bc71b6036ec30b87b2
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent:v1.1.2-eksbuild.2
      imageID: 602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent@sha256:9744cc538f8f7afa925ada8afb4b32f6c9c7fb225383978c8f2701df1220bb9f
      lastState: {}
      name: aws-eks-nodeagent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-09T19:37:17Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /sys/fs/bpf
        name: bpf-pin-path
      - mountPath: /var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lh4w6
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://74336e97760aa93f3a2083d62c6da61632ccda63c1370134fc57532373c59f5d
      image: 066635153087.dkr.ecr.il-central-1.amazonaws.com/amazon-k8s-cni:v1.18.3-eksbuild.2
      imageID: sha256:f65b58751c202d60e13020ac144c608728fd2fcea406d6cafac1e755d5839673
      lastState: {}
      name: aws-node
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-09T19:37:17Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lh4w6
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.104.0.216
    hostIPs:
    - ip: 10.104.0.216
    initContainerStatuses:
    - containerID: containerd://ea51c3f8d18e152567d5d3b910718afa2ddee7968e6e498907fab6529c70c52f
      image: 066635153087.dkr.ecr.il-central-1.amazonaws.com/amazon-k8s-cni-init:v1.18.3-eksbuild.2
      imageID: sha256:addf38b09e5099344c33a451c35f4ae26b321549f05aa62c50b4e74fed9c26a6
      lastState: {}
      name: aws-vpc-cni-init
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://ea51c3f8d18e152567d5d3b910718afa2ddee7968e6e498907fab6529c70c52f
          exitCode: 0
          finishedAt: "2024-10-09T19:37:16Z"
          reason: Completed
          startedAt: "2024-10-09T19:37:16Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lh4w6
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.104.0.216
    podIPs:
    - ip: 10.104.0.216
    qosClass: Burstable
    startTime: "2024-10-09T19:37:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-10-09T19:32:37Z"
    generateName: coredns-789f8477df-
    labels:
      eks.amazonaws.com/component: coredns
      k8s-app: kube-dns
      pod-template-hash: 789f8477df
    name: coredns-789f8477df-gvh82
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-789f8477df
      uid: 93b266c0-0b76-4cb2-bdc1-2cfa57339349
    resourceVersion: "1406"
    uid: 9b573569-4b9f-4524-8239-7f2f76bae169
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
            - key: kubernetes.io/arch
              operator: In
              values:
              - amd64
              - arm64
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.3-eksbuild.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4tlkm
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: ip-10-104-128-124.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: kube-dns
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-4tlkm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:36:57Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:36:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:36:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:36:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:36:53Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1e0eb26efe3ae27720227581fa6bdb017e5673251169007c0c0948d721af5d3a
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.3-eksbuild.1
      imageID: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns@sha256:5a047e99333089d71ed61efa3aba76b4bc2bc581c801d3a661d1109d90c3e1e6
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-09T19:36:56Z"
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4tlkm
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.104.128.124
    hostIPs:
    - ip: 10.104.128.124
    phase: Running
    podIP: 10.104.128.202
    podIPs:
    - ip: 10.104.128.202
    qosClass: Burstable
    startTime: "2024-10-09T19:36:53Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-10-09T19:32:37Z"
    generateName: coredns-789f8477df-
    labels:
      eks.amazonaws.com/component: coredns
      k8s-app: kube-dns
      pod-template-hash: 789f8477df
    name: coredns-789f8477df-vx7f5
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-789f8477df
      uid: 93b266c0-0b76-4cb2-bdc1-2cfa57339349
    resourceVersion: "1400"
    uid: 9c988298-2cff-4b62-b21c-c48121939d05
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
            - key: kubernetes.io/arch
              operator: In
              values:
              - amd64
              - arm64
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.3-eksbuild.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h5kvz
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: ip-10-104-128-124.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: kube-dns
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-h5kvz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:36:57Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:36:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:36:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:36:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:36:53Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3b3e376de9370dcc53753832fe1809da8d8e166a04ea36b1fc19f129e2ac93af
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.3-eksbuild.1
      imageID: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns@sha256:5a047e99333089d71ed61efa3aba76b4bc2bc581c801d3a661d1109d90c3e1e6
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-09T19:36:56Z"
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h5kvz
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.104.128.124
    hostIPs:
    - ip: 10.104.128.124
    phase: Running
    podIP: 10.104.128.249
    podIPs:
    - ip: 10.104.128.249
    qosClass: Burstable
    startTime: "2024-10-09T19:36:53Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-10-09T19:37:11Z"
    generateName: eks-pod-identity-agent-
    labels:
      app.kubernetes.io/instance: eks-pod-identity-agent
      app.kubernetes.io/name: eks-pod-identity-agent
      controller-revision-hash: bbfd9c4b5
      pod-template-generation: "1"
    name: eks-pod-identity-agent-cvpvw
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: eks-pod-identity-agent
      uid: 419ac4ab-b5e9-4023-9ec7-6448c34cfcdf
    resourceVersion: "1516"
    uid: b50b60bf-9715-4b63-9a18-13ac74b85369
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-104-0-216.ec2.internal
    containers:
    - args:
      - --port
      - "80"
      - --cluster-name
      - n6oy2vvr-K8s
      - --probe-port
      - "2703"
      command:
      - /go-runner
      - /eks-pod-identity-agent
      - server
      env:
      - name: AWS_REGION
        value: us-east-1
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-pod-identity-agent:0.1.15
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: localhost
          path: /healthz
          port: probes-port
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: eks-pod-identity-agent
      ports:
      - containerPort: 80
        hostPort: 80
        name: proxy
        protocol: TCP
      - containerPort: 2703
        hostPort: 2703
        name: probes-port
        protocol: TCP
      readinessProbe:
        failureThreshold: 30
        httpGet:
          host: localhost
          path: /readyz
          port: probes-port
          scheme: HTTP
        initialDelaySeconds: 1
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources: {}
      securityContext:
        capabilities:
          add:
          - CAP_NET_BIND_SERVICE
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ngm6p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /go-runner
      - /eks-pod-identity-agent
      - initialize
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-pod-identity-agent:0.1.15
      imagePullPolicy: Always
      name: eks-pod-identity-agent-init
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ngm6p
        readOnly: true
    nodeName: ip-10-104-0-216.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - name: kube-api-access-ngm6p
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:37:13Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:37:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:37:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:37:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:37:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1c45ee189045aafb3dae868a1c5a3a2ae8651f3812cd6d144cb6d7881a0fa47a
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-pod-identity-agent:0.1.15
      imageID: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-pod-identity-agent@sha256:832ad48c9872fdcae32f2ea369d9874fa34f271b4dbc58ce04393c757befa462
      lastState: {}
      name: eks-pod-identity-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-09T19:37:13Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ngm6p
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.104.0.216
    hostIPs:
    - ip: 10.104.0.216
    initContainerStatuses:
    - containerID: containerd://144a320c9499c95237e5846fd7df993089612b270394ed05a8d0d4702eb648bb
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-pod-identity-agent:0.1.15
      imageID: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-pod-identity-agent@sha256:832ad48c9872fdcae32f2ea369d9874fa34f271b4dbc58ce04393c757befa462
      lastState: {}
      name: eks-pod-identity-agent-init
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://144a320c9499c95237e5846fd7df993089612b270394ed05a8d0d4702eb648bb
          exitCode: 0
          finishedAt: "2024-10-09T19:37:12Z"
          reason: Completed
          startedAt: "2024-10-09T19:37:12Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ngm6p
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.104.0.216
    podIPs:
    - ip: 10.104.0.216
    qosClass: BestEffort
    startTime: "2024-10-09T19:37:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-10-09T19:37:11Z"
    generateName: eks-pod-identity-agent-
    labels:
      app.kubernetes.io/instance: eks-pod-identity-agent
      app.kubernetes.io/name: eks-pod-identity-agent
      controller-revision-hash: bbfd9c4b5
      pod-template-generation: "1"
    name: eks-pod-identity-agent-sp7ft
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: eks-pod-identity-agent
      uid: 419ac4ab-b5e9-4023-9ec7-6448c34cfcdf
    resourceVersion: "1527"
    uid: 2a773bca-a1dc-4c4a-b608-5c93a63b7af7
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-104-128-124.ec2.internal
    containers:
    - args:
      - --port
      - "80"
      - --cluster-name
      - n6oy2vvr-K8s
      - --probe-port
      - "2703"
      command:
      - /go-runner
      - /eks-pod-identity-agent
      - server
      env:
      - name: AWS_REGION
        value: us-east-1
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-pod-identity-agent:0.1.15
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: localhost
          path: /healthz
          port: probes-port
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: eks-pod-identity-agent
      ports:
      - containerPort: 80
        hostPort: 80
        name: proxy
        protocol: TCP
      - containerPort: 2703
        hostPort: 2703
        name: probes-port
        protocol: TCP
      readinessProbe:
        failureThreshold: 30
        httpGet:
          host: localhost
          path: /readyz
          port: probes-port
          scheme: HTTP
        initialDelaySeconds: 1
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources: {}
      securityContext:
        capabilities:
          add:
          - CAP_NET_BIND_SERVICE
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gpbsg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /go-runner
      - /eks-pod-identity-agent
      - initialize
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-pod-identity-agent:0.1.15
      imagePullPolicy: Always
      name: eks-pod-identity-agent-init
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gpbsg
        readOnly: true
    nodeName: ip-10-104-128-124.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - name: kube-api-access-gpbsg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:37:13Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:37:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:37:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:37:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:37:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5e01c4307be97eb852ad4cd7e215de657f6dcc0f9097fb1ac34342fa9946059c
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-pod-identity-agent:0.1.15
      imageID: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-pod-identity-agent@sha256:832ad48c9872fdcae32f2ea369d9874fa34f271b4dbc58ce04393c757befa462
      lastState: {}
      name: eks-pod-identity-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-09T19:37:14Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gpbsg
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.104.128.124
    hostIPs:
    - ip: 10.104.128.124
    initContainerStatuses:
    - containerID: containerd://469acea4c79ac3625c9515d5a13d2bb9cd851e4a115736cd5222778086091345
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-pod-identity-agent:0.1.15
      imageID: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-pod-identity-agent@sha256:832ad48c9872fdcae32f2ea369d9874fa34f271b4dbc58ce04393c757befa462
      lastState: {}
      name: eks-pod-identity-agent-init
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://469acea4c79ac3625c9515d5a13d2bb9cd851e4a115736cd5222778086091345
          exitCode: 0
          finishedAt: "2024-10-09T19:37:12Z"
          reason: Completed
          startedAt: "2024-10-09T19:37:12Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gpbsg
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.104.128.124
    podIPs:
    - ip: 10.104.128.124
    qosClass: BestEffort
    startTime: "2024-10-09T19:37:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-10-09T19:36:42Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 6cf9ccc4bc
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-7bnxs
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 4cb736d1-682e-4a49-96fe-a5f8e4dac948
    resourceVersion: "1325"
    uid: e233fb29-6e6f-45bc-8c72-712e3f7886e7
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-104-0-216.ec2.internal
    containers:
    - command:
      - kube-proxy
      - --v=2
      - --config=/var/lib/kube-proxy-config/config
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.31.0-minimal-eksbuild.2
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/lib/kube-proxy/
        name: kubeconfig
      - mountPath: /var/lib/kube-proxy-config/
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f2npq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: ip-10-104-0-216.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log
        type: ""
      name: varlog
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kubeconfig
    - configMap:
        defaultMode: 420
        name: kube-proxy-config
      name: config
    - name: kube-api-access-f2npq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:36:48Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:36:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:36:48Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:36:48Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:36:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7f2e191355cd7b1de82b82bcf4447dd375301333e2ff717de3776bea469af2b3
      image: 066635153087.dkr.ecr.il-central-1.amazonaws.com/eks/kube-proxy:v1.31.0-minimal-eksbuild.2
      imageID: sha256:90cb402e7ebc61b5e0f195d0f212b4bc4b1d6b21ecb2613b6b26e2e9c9d09e0a
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-09T19:36:47Z"
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib/kube-proxy/
        name: kubeconfig
      - mountPath: /var/lib/kube-proxy-config/
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f2npq
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.104.0.216
    hostIPs:
    - ip: 10.104.0.216
    phase: Running
    podIP: 10.104.0.216
    podIPs:
    - ip: 10.104.0.216
    qosClass: Burstable
    startTime: "2024-10-09T19:36:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-10-09T19:36:36Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 6cf9ccc4bc
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-hdxt7
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 4cb736d1-682e-4a49-96fe-a5f8e4dac948
    resourceVersion: "1312"
    uid: 7c265da3-ae8a-48c3-b679-e1fbf8dab643
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-104-128-124.ec2.internal
    containers:
    - command:
      - kube-proxy
      - --v=2
      - --config=/var/lib/kube-proxy-config/config
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.31.0-minimal-eksbuild.2
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/lib/kube-proxy/
        name: kubeconfig
      - mountPath: /var/lib/kube-proxy-config/
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vwrvz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: ip-10-104-128-124.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log
        type: ""
      name: varlog
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kubeconfig
    - configMap:
        defaultMode: 420
        name: kube-proxy-config
      name: config
    - name: kube-api-access-vwrvz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:36:46Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:36:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:36:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:36:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-09T19:36:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://11a50c7b179fa65d980ae467a0aa9502aa95987a28d7f68be775310ef27a690a
      image: 066635153087.dkr.ecr.il-central-1.amazonaws.com/eks/kube-proxy:v1.31.0-minimal-eksbuild.2
      imageID: sha256:90cb402e7ebc61b5e0f195d0f212b4bc4b1d6b21ecb2613b6b26e2e9c9d09e0a
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-09T19:36:45Z"
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib/kube-proxy/
        name: kubeconfig
      - mountPath: /var/lib/kube-proxy-config/
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vwrvz
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.104.128.124
    hostIPs:
    - ip: 10.104.128.124
    phase: Running
    podIP: 10.104.128.124
    podIPs:
    - ip: 10.104.128.124
    qosClass: Burstable
    startTime: "2024-10-09T19:36:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      paloaltonetworks.com/app: pan-cni
      scheduler.alpha.kubernetes.io/critical-pod: ""
    creationTimestamp: "2024-10-11T04:20:03Z"
    generateName: pan-cni-
    labels:
      controller-revision-hash: 6b9d67c684
      k8s-app: pan-cni
      pod-template-generation: "1"
    name: pan-cni-l49hv
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: pan-cni
      uid: 5aeb0b4e-e9e6-4a37-94ca-2b64e39c1ee1
    resourceVersion: "332651"
    uid: 1fbbc63e-d3c5-4e99-b6c6-b5f330df2925
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-104-0-216.ec2.internal
    containers:
    - command:
      - /install-pan-cni.sh
      - main
      env:
      - name: CNI_NETWORK_CONFIG
        valueFrom:
          configMapKeyRef:
            key: cni_network_config
            name: pan-cni-config
      - name: MY_POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: gcr.io/pan-cn-series/airs/pan-cni:4.0.0
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /install-pan-cni.sh
            - cleanup
      name: install-pan-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/appinfo
        name: appinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-d5xvd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: ip-10-104-0-216.ec2.internal
    nodeSelector:
      beta.kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: pan-cni-sa
    serviceAccountName: pan-cni-sa
    terminationGracePeriodSeconds: 5
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /opt/cni/bin
        type: ""
      name: cni-bin-dir
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni-net-dir
    - hostPath:
        path: /var/log/pan-appinfo
        type: DirectoryOrCreate
      name: appinfo
    - name: kube-api-access-d5xvd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-11T04:20:04Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-11T04:20:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-11T04:20:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-11T04:20:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-11T04:20:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4e2d17e05a0339e122bb404446f34a26cf413b5b1f2689e099ca1c85ea2b0120
      image: gcr.io/pan-cn-series/airs/pan-cni:4.0.0
      imageID: gcr.io/pan-cn-series/airs/pan-cni@sha256:724c998c3fdf52dce1ed9fac0cfb73111ee0ead72273fae74ee21f36f7972f56
      lastState: {}
      name: install-pan-cni
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-11T04:20:04Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/appinfo
        name: appinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-d5xvd
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.104.0.216
    hostIPs:
    - ip: 10.104.0.216
    phase: Running
    podIP: 10.104.0.216
    podIPs:
    - ip: 10.104.0.216
    qosClass: BestEffort
    startTime: "2024-10-11T04:20:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      paloaltonetworks.com/app: pan-cni
      scheduler.alpha.kubernetes.io/critical-pod: ""
    creationTimestamp: "2024-10-11T04:20:03Z"
    generateName: pan-cni-
    labels:
      controller-revision-hash: 6b9d67c684
      k8s-app: pan-cni
      pod-template-generation: "1"
    name: pan-cni-rspdh
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: pan-cni
      uid: 5aeb0b4e-e9e6-4a37-94ca-2b64e39c1ee1
    resourceVersion: "332654"
    uid: e90e8dd7-81b8-4250-bdd9-5e7cac896b5f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-104-128-124.ec2.internal
    containers:
    - command:
      - /install-pan-cni.sh
      - main
      env:
      - name: CNI_NETWORK_CONFIG
        valueFrom:
          configMapKeyRef:
            key: cni_network_config
            name: pan-cni-config
      - name: MY_POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: gcr.io/pan-cn-series/airs/pan-cni:4.0.0
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /install-pan-cni.sh
            - cleanup
      name: install-pan-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/appinfo
        name: appinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cg4hb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: ip-10-104-128-124.ec2.internal
    nodeSelector:
      beta.kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: pan-cni-sa
    serviceAccountName: pan-cni-sa
    terminationGracePeriodSeconds: 5
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /opt/cni/bin
        type: ""
      name: cni-bin-dir
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni-net-dir
    - hostPath:
        path: /var/log/pan-appinfo
        type: DirectoryOrCreate
      name: appinfo
    - name: kube-api-access-cg4hb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-11T04:20:04Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-11T04:20:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-11T04:20:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-11T04:20:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-11T04:20:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://930a316d2beb01d1142bc3696bb7d00ef93cbd7a67af9038b03260b0eef6dc36
      image: gcr.io/pan-cn-series/airs/pan-cni:4.0.0
      imageID: gcr.io/pan-cn-series/airs/pan-cni@sha256:724c998c3fdf52dce1ed9fac0cfb73111ee0ead72273fae74ee21f36f7972f56
      lastState: {}
      name: install-pan-cni
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-11T04:20:04Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/appinfo
        name: appinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cg4hb
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.104.128.124
    hostIPs:
    - ip: 10.104.128.124
    phase: Running
    podIP: 10.104.128.124
    podIPs:
    - ip: 10.104.128.124
    qosClass: BestEffort
    startTime: "2024-10-11T04:20:03Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2024-10-09T19:32:36Z"
    labels:
      eks.amazonaws.com/component: kube-dns
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "579"
    uid: f75b1ec0-6b42-40e5-b789-a2d0e0b0f44e
  spec:
    clusterIP: 172.20.0.10
    clusterIPs:
    - 172.20.0.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: ai-runtime-security
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2024-10-11T04:20:03Z"
    labels:
      app: pan-ngfw-svc
      app.kubernetes.io/managed-by: Helm
    name: pan-ngfw-svc
    namespace: kube-system
    resourceVersion: "332626"
    uid: 37ca32c6-0ca1-44a9-a61b-b6f209efaa43
  spec:
    clusterIP: 172.20.222.196
    clusterIPs:
    - 172.20.222.196
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 6080
      protocol: UDP
      targetPort: 6080
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
    creationTimestamp: "2024-10-09T19:32:37Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: aws-vpc-cni
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: aws-node
      app.kubernetes.io/version: v1.18.3
      helm.sh/chart: aws-vpc-cni-1.18.3
      k8s-app: aws-node
    name: aws-node
    namespace: kube-system
    resourceVersion: "1565"
    uid: 080eb1f3-b8af-448e-95f8-bd5bc7679957
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: aws-node
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: aws-vpc-cni
          app.kubernetes.io/name: aws-node
          k8s-app: aws-node
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
                - key: eks.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - fargate
        containers:
        - env:
          - name: ADDITIONAL_ENI_TAGS
            value: '{}'
          - name: ANNOTATE_POD_IP
            value: "false"
          - name: AWS_VPC_CNI_NODE_PORT_SUPPORT
            value: "true"
          - name: AWS_VPC_ENI_MTU
            value: "9001"
          - name: AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG
            value: "false"
          - name: AWS_VPC_K8S_CNI_EXTERNALSNAT
            value: "false"
          - name: AWS_VPC_K8S_CNI_LOGLEVEL
            value: DEBUG
          - name: AWS_VPC_K8S_CNI_LOG_FILE
            value: /host/var/log/aws-routed-eni/ipamd.log
          - name: AWS_VPC_K8S_CNI_RANDOMIZESNAT
            value: prng
          - name: AWS_VPC_K8S_CNI_VETHPREFIX
            value: eni
          - name: AWS_VPC_K8S_PLUGIN_LOG_FILE
            value: /var/log/aws-routed-eni/plugin.log
          - name: AWS_VPC_K8S_PLUGIN_LOG_LEVEL
            value: DEBUG
          - name: CLUSTER_ENDPOINT
            value: https://260A3F90DADA104761D41ED5654BD337.gr7.us-east-1.eks.amazonaws.com
          - name: CLUSTER_NAME
            value: n6oy2vvr-K8s
          - name: DISABLE_INTROSPECTION
            value: "false"
          - name: DISABLE_METRICS
            value: "false"
          - name: DISABLE_NETWORK_RESOURCE_PROVISIONING
            value: "false"
          - name: ENABLE_IPv4
            value: "true"
          - name: ENABLE_IPv6
            value: "false"
          - name: ENABLE_POD_ENI
            value: "false"
          - name: ENABLE_PREFIX_DELEGATION
            value: "false"
          - name: ENABLE_SUBNET_DISCOVERY
            value: "true"
          - name: NETWORK_POLICY_ENFORCING_MODE
            value: standard
          - name: VPC_CNI_VERSION
            value: v1.18.3
          - name: VPC_ID
            value: vpc-0eeb81c2d824cec68
          - name: WARM_ENI_TARGET
            value: "1"
          - name: WARM_PREFIX_TARGET
            value: "1"
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.18.3-eksbuild.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /app/grpc-health-probe
              - -addr=:50051
              - -connect-timeout=5s
              - -rpc-timeout=5s
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: aws-node
          ports:
          - containerPort: 61678
            name: metrics
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /app/grpc-health-probe
              - -addr=:50051
              - -connect-timeout=5s
              - -rpc-timeout=5s
            failureThreshold: 3
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 25m
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-bin-dir
          - mountPath: /host/etc/cni/net.d
            name: cni-net-dir
          - mountPath: /host/var/log/aws-routed-eni
            name: log-dir
          - mountPath: /var/run/aws-node
            name: run-dir
          - mountPath: /run/xtables.lock
            name: xtables-lock
        - args:
          - --enable-ipv6=false
          - --enable-network-policy=false
          - --enable-cloudwatch-logs=false
          - --enable-policy-event-logs=false
          - --log-file=/var/log/aws-routed-eni/network-policy-agent.log
          - --metrics-bind-addr=:8162
          - --health-probe-bind-addr=:8163
          - --conntrack-cache-cleanup-period=300
          env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent:v1.1.2-eksbuild.2
          imagePullPolicy: IfNotPresent
          name: aws-eks-nodeagent
          resources:
            requests:
              cpu: 25m
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-bin-dir
          - mountPath: /sys/fs/bpf
            name: bpf-pin-path
          - mountPath: /var/log/aws-routed-eni
            name: log-dir
          - mountPath: /var/run/aws-node
            name: run-dir
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - env:
          - name: DISABLE_TCP_EARLY_DEMUX
            value: "false"
          - name: ENABLE_IPv6
            value: "false"
          image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.18.3-eksbuild.2
          imagePullPolicy: IfNotPresent
          name: aws-vpc-cni-init
          resources:
            requests:
              cpu: 25m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-bin-dir
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: aws-node
        serviceAccountName: aws-node
        terminationGracePeriodSeconds: 10
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: /sys/fs/bpf
            type: ""
          name: bpf-pin-path
        - hostPath:
            path: /opt/cni/bin
            type: ""
          name: cni-bin-dir
        - hostPath:
            path: /etc/cni/net.d
            type: ""
          name: cni-net-dir
        - hostPath:
            path: /var/log/aws-routed-eni
            type: DirectoryOrCreate
          name: log-dir
        - hostPath:
            path: /var/run/aws-node
            type: DirectoryOrCreate
          name: run-dir
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 2
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2024-10-09T19:37:11Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: eks-pod-identity-agent
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: eks-pod-identity-agent
      app.kubernetes.io/version: 0.1.15
      helm.sh/chart: eks-pod-identity-agent-1.3.2
    name: eks-pod-identity-agent
    namespace: kube-system
    resourceVersion: "1528"
    uid: 419ac4ab-b5e9-4023-9ec7-6448c34cfcdf
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: eks-pod-identity-agent
        app.kubernetes.io/name: eks-pod-identity-agent
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: eks-pod-identity-agent
          app.kubernetes.io/name: eks-pod-identity-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
                - key: eks.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - fargate
        containers:
        - args:
          - --port
          - "80"
          - --cluster-name
          - n6oy2vvr-K8s
          - --probe-port
          - "2703"
          command:
          - /go-runner
          - /eks-pod-identity-agent
          - server
          env:
          - name: AWS_REGION
            value: us-east-1
          image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-pod-identity-agent:0.1.15
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: localhost
              path: /healthz
              port: probes-port
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: eks-pod-identity-agent
          ports:
          - containerPort: 80
            name: proxy
            protocol: TCP
          - containerPort: 2703
            name: probes-port
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              host: localhost
              path: /readyz
              port: probes-port
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          securityContext:
            capabilities:
              add:
              - CAP_NET_BIND_SERVICE
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /go-runner
          - /eks-pod-identity-agent
          - initialize
          image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/eks-pod-identity-agent:0.1.15
          imagePullPolicy: Always
          name: eks-pod-identity-agent-init
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2024-10-09T19:32:36Z"
    generation: 1
    labels:
      eks.amazonaws.com/component: kube-proxy
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "1326"
    uid: 4cb736d1-682e-4a49-96fe-a5f8e4dac948
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-proxy
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-proxy
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
                - key: eks.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - fargate
        containers:
        - command:
          - kube-proxy
          - --v=2
          - --config=/var/lib/kube-proxy-config/config
          - --hostname-override=$(NODE_NAME)
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.31.0-minimal-eksbuild.2
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources:
            requests:
              cpu: 100m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
          - mountPath: /var/lib/kube-proxy/
            name: kubeconfig
          - mountPath: /var/lib/kube-proxy-config/
            name: config
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: /var/log
            type: ""
          name: varlog
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
        - configMap:
            defaultMode: 420
            name: kube-proxy
          name: kubeconfig
        - configMap:
            defaultMode: 420
            name: kube-proxy-config
          name: config
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      meta.helm.sh/release-name: ai-runtime-security
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2024-10-11T04:20:03Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      k8s-app: pan-cni
    name: pan-cni
    namespace: kube-system
    resourceVersion: "332655"
    uid: 5aeb0b4e-e9e6-4a37-94ca-2b64e39c1ee1
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: pan-cni
    template:
      metadata:
        annotations:
          paloaltonetworks.com/app: pan-cni
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: pan-cni
      spec:
        containers:
        - command:
          - /install-pan-cni.sh
          - main
          env:
          - name: CNI_NETWORK_CONFIG
            valueFrom:
              configMapKeyRef:
                key: cni_network_config
                name: pan-cni-config
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: gcr.io/pan-cn-series/airs/pan-cni:4.0.0
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - /install-pan-cni.sh
                - cleanup
          name: install-pan-cni
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-bin-dir
          - mountPath: /host/etc/cni/net.d
            name: cni-net-dir
          - mountPath: /host/appinfo
            name: appinfo
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: pan-cni-sa
        serviceAccountName: pan-cni-sa
        terminationGracePeriodSeconds: 5
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        volumes:
        - hostPath:
            path: /opt/cni/bin
            type: ""
          name: cni-bin-dir
        - hostPath:
            path: /etc/cni/net.d
            type: ""
          name: cni-net-dir
        - hostPath:
            path: /var/log/pan-appinfo
            type: DirectoryOrCreate
          name: appinfo
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-10-09T19:32:36Z"
    generation: 1
    labels:
      eks.amazonaws.com/component: coredns
      k8s-app: kube-dns
      kubernetes.io/name: CoreDNS
    name: coredns
    namespace: kube-system
    resourceVersion: "1409"
    uid: 36c997c4-446c-47de-9805-4cc72f3be3e4
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        eks.amazonaws.com/component: coredns
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          eks.amazonaws.com/component: coredns
          k8s-app: kube-dns
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.3-eksbuild.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        - key: CriticalAddonsOnly
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: kube-dns
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2024-10-09T19:36:57Z"
      lastUpdateTime: "2024-10-09T19:36:57Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-10-09T19:32:36Z"
      lastUpdateTime: "2024-10-09T19:36:57Z"
      message: ReplicaSet "coredns-789f8477df" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-10-09T19:32:36Z"
    generation: 1
    labels:
      eks.amazonaws.com/component: coredns
      k8s-app: kube-dns
      pod-template-hash: 789f8477df
    name: coredns-789f8477df
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: 36c997c4-446c-47de-9805-4cc72f3be3e4
    resourceVersion: "1407"
    uid: 93b266c0-0b76-4cb2-bdc1-2cfa57339349
  spec:
    replicas: 2
    selector:
      matchLabels:
        eks.amazonaws.com/component: coredns
        k8s-app: kube-dns
        pod-template-hash: 789f8477df
    template:
      metadata:
        creationTimestamp: null
        labels:
          eks.amazonaws.com/component: coredns
          k8s-app: kube-dns
          pod-template-hash: 789f8477df
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.3-eksbuild.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        - key: CriticalAddonsOnly
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: kube-dns
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: v1
  data:
    branch-eni-cooldown: "60"
    enable-network-policy-controller: "false"
    enable-windows-ipam: "false"
    enable-windows-prefix-delegation: "false"
    minimum-ip-target: "3"
    warm-ip-target: "1"
    warm-prefix-target: "0"
  kind: ConfigMap
  metadata:
    creationTimestamp: "2024-10-09T19:32:37Z"
    labels:
      app.kubernetes.io/instance: aws-vpc-cni
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: aws-node
      app.kubernetes.io/version: v1.18.3
      helm.sh/chart: aws-vpc-cni-1.18.3
      k8s-app: aws-node
    name: amazon-vpc-cni
    namespace: kube-system
    resourceVersion: "610"
    uid: f124b501-8802-43d5-9305-ad34a3adb82a
- apiVersion: v1
  data:
    mapRoles: |
      - groups:
        - system:bootstrappers
        - system:nodes
        rolearn: arn:aws:iam::367521625516:role/n6oy2vvr-K8s-node-eks-node-group-20241009192358052300000002
        username: system:node:{{EC2PrivateDNSName}}
  kind: ConfigMap
  metadata:
    creationTimestamp: "2024-10-09T19:35:58Z"
    name: aws-auth
    namespace: kube-system
    resourceVersion: "1120"
    uid: da792a5f-ca77-40d1-971c-6f0e01854623
- apiVersion: v1
  data:
    Corefile: |
      .:53 {
          errors
          health {
              lameduck 5s
            }
          ready
          kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
          }
          prometheus :9153
          forward . /etc/resolv.conf
          cache 30
          loop
          reload
          loadbalance
      }
  kind: ConfigMap
  metadata:
    creationTimestamp: "2024-10-09T19:32:36Z"
    labels:
      eks.amazonaws.com/component: coredns
      k8s-app: kube-dns
    name: coredns
    namespace: kube-system
    resourceVersion: "572"
    uid: f8fa4b71-fdf9-4339-acb7-753ece02d455
- apiVersion: v1
  data:
    client-ca-file: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIICAL1OPrfp3gwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDEwMDkxOTI1MTBaFw0zNDEwMDcxOTMwMTBaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQDlY7Kt+SOumqhXikUB1B3jLe7VCCno/1QRLrX5HMH2gBAXHWaN2LaU9wZk
      hOBrKDg0tLgkN8YJSViRs9gT90ePesS013YoO0i+4s1lttPa6j1WY91JF3gs9sru
      u0VoewAA4ju7pGy/0PF7WLh7eeZunKrW4VJJNHrnwGzKOmslzUuTkMa/1XVj43ZB
      cci7ihrwQfo8ibiW//wFAeH0mm93spez45U3dn0wMidi/khUcZjEhAJK4VK4mJi4
      A6bW5cv/DRVLMwdnDNLYhq74I2xxYLq/cnuh7XUVoYJB6pLvkwvmKvsw8U5IUiqV
      Iz9PQuNI9Bw4talBaeDY0uuYnrD1AgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTJ/dxLR9RQUjP3A5s6ioCK0cuQYjAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQDADyshxLC5
      7vP/vX2C/QovC6AjxEVAiZ98AjAD5DpKaGEhNqISEnvxXjMdTkoJ0/vH1phTZpgW
      99MJZCj/fEh+xxX9s89Vq9KncBUgj+R51suNyVGLSr2Np1AeeScts+BSix6vZ0YZ
      9mv97xKQpjyREGAUQbfwVOumGP2j6L4DhlfS+daVImgpFGZn3iw0MMow9d9NOeW7
      f/fR+68WJokhJOO3xS7o8fb8q9kPi3AduYjfBw/BhkWXg0svNPumz0jqBrDUAFCp
      O9BeopJ4+WjsAUwXKVYFfpVl0I68Hj3a4SQExCDRs/9iKT6E/TOn6iZRt4RDKUBv
      IQnETz8qkezc
      -----END CERTIFICATE-----
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIbdJjc0FRwY0wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDEwMDkxOTMxMzJaFw0zNDEwMDcxOTM2MzJaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQDD+5BDz+dAwcOU5+bc3EIlTzD42/3U7+vnt77c6o0Yd7KKeb0Ezkqi3G2/
      9Dl1uOYr4MG7pg4EP+jvCUyfyhI3Nx0PSeTFNY81HENJZRNW3vkoH3UGX0MvXlrb
      5nFnTqOUc5fgL4Ni5gwBX/s3H1wW4hNzEYZkrQ+YMbUK28n5zlkW4/NTCPoxwne2
      LL9W8Fuv6ZLXgT40Ea7xPbjb1X3kX7SSHZ/xN6h0TMjNAwsLci7xhh5ZoPijHM9i
      A1upWqq5559PqxQ6GVtkOVKXH0WwtGe4+D5kAF1n45+Gzm/7RNgPVDvQgJt1bbdH
      U6RjM7csxkAnzcraZITp5joSJl3ZAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTZmPu3J/vL2UE1nZiovqdB3a84mTAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQCFISXY6ugt
      +lQ2etMZsFFn7w/37EXORn2ggjapmxBAG9dkWksmaCTqm1u1H94Hz6w34pX/1qYx
      SUwIIedO3Qdvcdr0dRHd1zpI5voC6+7mqOooUpyCLffSeA2aYv3HqfRvrR5glX/t
      g6mgzcRCwX8Z5lJ7JIPue8AhKo0EXGhrODX4j5IME9zMgmIdXYmBpgVe1v2SeIwB
      zpDoVlzLujiHnRyM7wSQYVxhck0KZsBw8LbWfHBs9PpIr6axWDIpw3XoyEasEni7
      Wa11+ftrXY4+BLcpcy4rgocChrmHywX6o41GMvyhgWoVToClu+7e1vozN76FWckP
      At77jWJf/Nge
      -----END CERTIFICATE-----
    requestheader-allowed-names: '["front-proxy-client"]'
    requestheader-client-ca-file: |
      -----BEGIN CERTIFICATE-----
      MIIDETCCAfmgAwIBAgIIcY4sGLj7YZEwDQYJKoZIhvcNAQELBQAwGTEXMBUGA1UE
      AxMOZnJvbnQtcHJveHktY2EwHhcNMjQxMDA5MTkyNTAyWhcNMzQxMDA3MTkzMDAy
      WjAZMRcwFQYDVQQDEw5mcm9udC1wcm94eS1jYTCCASIwDQYJKoZIhvcNAQEBBQAD
      ggEPADCCAQoCggEBAMkzwv3YFTU8fqlNu2bsrbi42ElgRmOrYgV/au5E1P5UKk+3
      m0QA0CP3XDOR11NiEn+pAOGqWztRGia6YUT8NkSPi/S+2SVFoeEEoKUilWYnewnE
      NwBvuI3y/THLNbcJmyFC3T9DvCmPpyzNOnxacNqO9yDCx5whKKezxs/nbDmfLifN
      tguQsmKcLwkgzFYwsB+6dFhsA1TE+ARFZ6//5+Tbng4ezCPkeaV3m5gQ4HvcCp9J
      3Tz5qZx/4KnpPBCo9q6CPbFOwyrohTEddh2px8AVqd31n+kyZOHrSiBh+Ya6/1q5
      Dgdzy1p9g/IAysqSOFkGEG+pceOLn2Bw2y83n9MCAwEAAaNdMFswDgYDVR0PAQH/
      BAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFFWqrr2eYg3qxcVqmDPQ
      QK1472gQMBkGA1UdEQQSMBCCDmZyb250LXByb3h5LWNhMA0GCSqGSIb3DQEBCwUA
      A4IBAQAQqH6RJd9Kzh73abC8SRsugZl7SR0qSV6M6fbqrCGydPlX1If2u6e0RDcs
      dJpvsHbr9A82er1ZPieUPYQ8esgsdyV4gpjaHhTo8bkDqH2dPR1a3SD2Sg3/8Bjc
      z4H7cLdewtqZH+mbwvhBoK1hJBGPEMV77txuKIHy96H3H/NxXqQ+g4pc/JKqNT3v
      BCndQNoi6mR21r5TiEI1979fItm/CGucuqh3vKMw8eIdvvUsxN+mABz7h95MaP+O
      6ev3S0xSSl3pBRJm3NsUaCGbkfauZSm0bmmuYH1RulZq4yOGKMmDkt8hlNh5Vvbo
      02ipFDz1yNY7ZDRlxRWB3U9H39ew
      -----END CERTIFICATE-----
    requestheader-extra-headers-prefix: '["X-Remote-Extra-"]'
    requestheader-group-headers: '["X-Remote-Group"]'
    requestheader-username-headers: '["X-Remote-User"]'
  kind: ConfigMap
  metadata:
    creationTimestamp: "2024-10-09T19:30:55Z"
    name: extension-apiserver-authentication
    namespace: kube-system
    resourceVersion: "1573"
    uid: f5d88e50-c0cf-4ef9-b919-0646e7d1657b
- apiVersion: v1
  data:
    since: "2024-10-09"
  kind: ConfigMap
  metadata:
    creationTimestamp: "2024-10-09T19:30:55Z"
    name: kube-apiserver-legacy-service-account-token-tracking
    namespace: kube-system
    resourceVersion: "29"
    uid: f2f9f269-2e87-49b4-b8f6-0e2d58e4d28a
- apiVersion: v1
  data:
    kubeconfig: |-
      kind: Config
      apiVersion: v1
      clusters:
      - cluster:
          certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          server: https://260a3f90dada104761d41ed5654bd337.gr7.us-east-1.eks.amazonaws.com
        name: default
      contexts:
      - context:
          cluster: default
          namespace: default
          user: default
        name: default
      current-context: default
      users:
      - name: default
        user:
          tokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
  kind: ConfigMap
  metadata:
    creationTimestamp: "2024-10-09T19:32:36Z"
    labels:
      eks.amazonaws.com/component: kube-proxy
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "561"
    uid: b607c169-e047-4b57-8c84-b058e5fc3073
- apiVersion: v1
  data:
    config: |-
      apiVersion: kubeproxy.config.k8s.io/v1alpha1
      bindAddress: 0.0.0.0
      clientConnection:
        acceptContentTypes: ""
        burst: 10
        contentType: application/vnd.kubernetes.protobuf
        kubeconfig: /var/lib/kube-proxy/kubeconfig
        qps: 5
      clusterCIDR: ""
      configSyncPeriod: 15m0s
      conntrack:
        maxPerCore: 32768
        min: 131072
        tcpCloseWaitTimeout: 1h0m0s
        tcpEstablishedTimeout: 24h0m0s
      enableProfiling: false
      healthzBindAddress: 0.0.0.0:10256
      hostnameOverride: ""
      iptables:
        masqueradeAll: false
        masqueradeBit: 14
        minSyncPeriod: 0s
        syncPeriod: 30s
      ipvs:
        excludeCIDRs: null
        minSyncPeriod: 0s
        scheduler: ""
        syncPeriod: 30s
      kind: KubeProxyConfiguration
      metricsBindAddress: 0.0.0.0:10249
      mode: "iptables"
      nodePortAddresses: null
      oomScoreAdj: -998
      portRange: ""
  kind: ConfigMap
  metadata:
    creationTimestamp: "2024-10-09T19:32:36Z"
    labels:
      eks.amazonaws.com/component: kube-proxy
      k8s-app: kube-proxy
    name: kube-proxy-config
    namespace: kube-system
    resourceVersion: "562"
    uid: 3547cda3-8131-4bfa-a31c-7377c1fe17d3
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIFt29VsxHi2cwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDEwMDkxOTI1MDJaFw0zNDEwMDcxOTMwMDJaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQDPLMehlvfh0vm1EsjCDaaoW8kYqJfJ9WMcG0IbNemY941LqwB9HwXxg+3t
      7gdITQ9XpXh/OZIj0azGmqX5ftWmMH2aV0DjjYhXACsl0wNYgWwX9exN1pzACiNB
      HkMbo042IXK/IK96xm6Q2RoDWJbWLM11+Lr8H6y0sU0UtvYYEZlIqtqNI7Bzy3Q5
      IT22EJpj0hjgaKa+bsWKkxlHQ/kiMQ8aOn9/k7uimQgoMvH51N0m+A7815JuOkA1
      bchWRfpbdNXaNae7tWtFD3SH9c+THSWc3ADov2sxLk+RG9HnRpg5Ny4WQYFDOtNR
      uJTgCYyrcMo20iVt3a6znxHTfCD/AgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTYEUrj2rDbVmlooUG7wsKqfZGQ6zAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQB2uAwv6NEX
      /laJMfMs6MAr+VjiitsH4RleH4luSvakfAwYkCZCwn5Jsuldz18Usik/Jr+sM2BC
      9QmAaiaTqJ319C8yV2FbBhOG4Vl8/X3j5v+0HvNfhBAoMAjL5b1Vcfb9XPy+AYqM
      ZpxzMj9ItDHL61WYYZT5vA4DBqLDfACR1QQO3JbfbFbpL+cBk/ToLLOU/KD6My5w
      c46O2itx9e8/9Zuh+6T+NtcxljFZ8d5d4+3wMmh7e73MnUsjMEiaLZJcXThf5GRt
      1CKk4yKK2z2yEQkmrU3L60CSQ9Q1ZvCzlXtICIHKDM69yGRdIs4buOhfdGUUbz8s
      TRak1Gc6C9rg
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2024-10-09T19:31:06Z"
    name: kube-root-ca.crt
    namespace: kube-system
    resourceVersion: "353"
    uid: f5cddba3-d596-4bc0-bb08-42693f8a0b9f
- apiVersion: v1
  data:
    cni_network_config: |-
      {
        "cniVersion": "0.3.0",
        "name": "pan-cni",
        "type": "pan-cni",
        "log_level": "debug",
        "appinfo_dir": "/var/log/pan-appinfo",
        "mode": "service",
        "cloud": "eks",
        "dpservicename": "pan-ngfw-svc",
        "dpservicenamespace": "kube-system",
        "traffic_object_id": "1",
        "interfaces": ["eth0"],
        "interfacesip": [""],
        "interfacesmac": [""],
        "firewall": [ "pan-fw" ],
        "override_mtu": "",
        "kubernetes": {
            "kubeconfig": "__KUBECONFIG_FILEPATH__",
            "cni_bin_dir": "/opt/cni/bin",
            "exclude_namespaces": [ ],
            "security_namespaces": [ "kube-system"]
        }
      }
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: ai-runtime-security
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2024-10-11T04:20:03Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: pan-cni-config
    namespace: kube-system
    resourceVersion: "332622"
    uid: c28e951d-3fd0-462c-b640-816d7a254a70
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:03Z"
    name: attachdetach-controller
    namespace: kube-system
    resourceVersion: "307"
    uid: c288a384-da8e-4f9c-9fc2-2245f8abe7be
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:02Z"
    name: aws-cloud-provider
    namespace: kube-system
    resourceVersion: "268"
    uid: 870d371d-eb31-442d-83e7-d7e2d858948c
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:32:37Z"
    labels:
      app.kubernetes.io/instance: aws-vpc-cni
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: aws-node
      app.kubernetes.io/version: v1.18.3
      helm.sh/chart: aws-vpc-cni-1.18.3
      k8s-app: aws-node
    name: aws-node
    namespace: kube-system
    resourceVersion: "609"
    uid: 8a9c855a-2888-4302-a348-815089766b7b
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:02Z"
    name: certificate-controller
    namespace: kube-system
    resourceVersion: "263"
    uid: 2eaa6536-8b24-4161-a061-c2c1c8bc311c
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:05Z"
    name: clusterrole-aggregation-controller
    namespace: kube-system
    resourceVersion: "332"
    uid: 740051a4-84c9-42ed-accd-5f9036ed462b
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:32:36Z"
    labels:
      eks.amazonaws.com/component: coredns
      k8s-app: kube-dns
    name: coredns
    namespace: kube-system
    resourceVersion: "571"
    uid: f9b91230-57c5-465a-9c1b-c6ecc45b84b0
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:02Z"
    name: cronjob-controller
    namespace: kube-system
    resourceVersion: "288"
    uid: 9bfd5a33-2ae3-41c5-b1b3-5e4a2405a070
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:04Z"
    name: daemon-set-controller
    namespace: kube-system
    resourceVersion: "323"
    uid: 421f5b30-32bf-47ab-a75f-5ef9142faff2
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:06Z"
    name: default
    namespace: kube-system
    resourceVersion: "343"
    uid: 7acd60f7-c5cd-437b-996f-7b8f6729cfc9
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:04Z"
    name: deployment-controller
    namespace: kube-system
    resourceVersion: "329"
    uid: c893672a-af85-4854-8745-bef6b3e9a152
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:02Z"
    name: disruption-controller
    namespace: kube-system
    resourceVersion: "274"
    uid: cd57f03f-3ea5-472e-a95f-4a8a5795f1f7
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{},"name":"eks-vpc-resource-controller","namespace":"kube-system"}}
    creationTimestamp: "2024-10-09T19:31:03Z"
    name: eks-vpc-resource-controller
    namespace: kube-system
    resourceVersion: "299"
    uid: 9ee009ce-080a-4a79-8f5a-939e0a122282
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:02Z"
    name: endpoint-controller
    namespace: kube-system
    resourceVersion: "257"
    uid: c5428ed9-d3e9-4a7e-808f-a215d23f6b8c
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:03Z"
    name: endpointslice-controller
    namespace: kube-system
    resourceVersion: "314"
    uid: 4739694f-c217-4152-8831-e9e0f2994b2b
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:02Z"
    name: endpointslicemirroring-controller
    namespace: kube-system
    resourceVersion: "285"
    uid: 317412cf-8e6e-4358-aa6f-9228428b8150
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:04Z"
    name: ephemeral-volume-controller
    namespace: kube-system
    resourceVersion: "326"
    uid: 55d463b0-015a-4caf-ab9a-282be01dd7c1
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:02Z"
    name: expand-controller
    namespace: kube-system
    resourceVersion: "272"
    uid: b9c856f5-9ae3-4441-a9c6-fd03bedb553c
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:04Z"
    name: generic-garbage-collector
    namespace: kube-system
    resourceVersion: "327"
    uid: 3c6fc0b4-6f0a-497b-923f-eff807cbb169
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:03Z"
    name: horizontal-pod-autoscaler
    namespace: kube-system
    resourceVersion: "290"
    uid: ee0fa25c-e5fb-4774-b3f6-5300e868f130
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:02Z"
    name: job-controller
    namespace: kube-system
    resourceVersion: "259"
    uid: 57a02040-121f-46d6-965a-6c032bffb89a
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:32:36Z"
    labels:
      eks.amazonaws.com/component: kube-proxy
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "560"
    uid: 20422ccb-c62f-4517-9784-63428146648d
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:04Z"
    name: legacy-service-account-token-cleaner
    namespace: kube-system
    resourceVersion: "325"
    uid: 859acddc-90dc-4c78-babf-ae4f86642a80
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:02Z"
    name: namespace-controller
    namespace: kube-system
    resourceVersion: "266"
    uid: c6daf711-2af1-45c5-ab99-6d75763b2ae8
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:02Z"
    name: node-controller
    namespace: kube-system
    resourceVersion: "277"
    uid: c1ba1ac2-b5f0-4236-a934-ea85f3d71250
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      meta.helm.sh/release-name: ai-runtime-security
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2024-10-11T04:20:03Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: pan-cni-sa
    namespace: kube-system
    resourceVersion: "332621"
    uid: 5e574831-ba1f-427f-9a8a-b69082fa8891
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:05Z"
    name: persistent-volume-binder
    namespace: kube-system
    resourceVersion: "330"
    uid: 05bd7fb8-e121-4a1b-9f3e-78bb1aef6310
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:05Z"
    name: pod-garbage-collector
    namespace: kube-system
    resourceVersion: "335"
    uid: 0c691070-2b72-48f2-a935-401f6761bb4f
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:02Z"
    name: pv-protection-controller
    namespace: kube-system
    resourceVersion: "289"
    uid: 9ff757fd-b386-4b40-9181-5bd07bf19f1f
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:05Z"
    name: pvc-protection-controller
    namespace: kube-system
    resourceVersion: "333"
    uid: c729ff51-e4ac-46dd-a27f-7c3f15cd266c
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:02Z"
    name: replicaset-controller
    namespace: kube-system
    resourceVersion: "287"
    uid: 5e528fd3-6f47-4ee0-a08b-4e0640068db5
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:03Z"
    name: replication-controller
    namespace: kube-system
    resourceVersion: "317"
    uid: 6a25b7da-40a2-4272-a4f4-3f5ab274feac
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:02Z"
    name: resourcequota-controller
    namespace: kube-system
    resourceVersion: "286"
    uid: e76063dd-248c-4879-8c40-cc7760d7a377
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:05Z"
    name: root-ca-cert-publisher
    namespace: kube-system
    resourceVersion: "331"
    uid: b2e3a3ae-0d8d-4265-ba32-490da4d11196
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:04Z"
    name: service-account-controller
    namespace: kube-system
    resourceVersion: "319"
    uid: 3727a616-23da-4fdc-a92d-74d92c94c17e
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:02Z"
    name: service-controller
    namespace: kube-system
    resourceVersion: "283"
    uid: 2cee89a1-983e-46c0-8c62-55b2632cd74a
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:03Z"
    name: statefulset-controller
    namespace: kube-system
    resourceVersion: "303"
    uid: c4538088-3830-4496-a448-b1d9a7047f28
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:02Z"
    name: tagging-controller
    namespace: kube-system
    resourceVersion: "280"
    uid: 8bd2f5c6-c592-4ec1-bf86-82be77a70f31
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:02Z"
    name: ttl-after-finished-controller
    namespace: kube-system
    resourceVersion: "254"
    uid: 21298ab9-b68e-49a0-a603-f63dbe1480fb
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:05Z"
    name: ttl-controller
    namespace: kube-system
    resourceVersion: "336"
    uid: 4a73a03e-f820-409e-8582-761ee79f284e
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-09T19:31:02Z"
    name: validatingadmissionpolicy-status-controller
    namespace: kube-system
    resourceVersion: "284"
    uid: e105f248-ba8b-429e-b615-1f2ab75981d7
- aggregationRule:
    clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-admin: "true"
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: admin
    resourceVersion: "349"
    uid: 0d8709a0-e5bb-4ece-b4f3-2b698025cfcd
  rules:
  - apiGroups:
    - ""
    resources:
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    - secrets
    - services/proxy
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - impersonate
  - apiGroups:
    - ""
    resources:
    - pods
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - configmaps
    - events
    - persistentvolumeclaims
    - replicationcontrollers
    - replicationcontrollers/scale
    - secrets
    - serviceaccounts
    - services
    - services/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - replicasets
    - replicasets/scale
    - statefulsets
    - statefulsets/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - ingresses
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicationcontrollers/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - networkpolicies
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - persistentvolumeclaims
    - persistentvolumeclaims/status
    - pods
    - replicationcontrollers
    - replicationcontrollers/scale
    - serviceaccounts
    - services
    - services/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - events
    - limitranges
    - namespaces/status
    - pods/log
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - replicasets
    - replicasets/scale
    - replicasets/status
    - statefulsets
    - statefulsets/scale
    - statefulsets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    - horizontalpodautoscalers/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - cronjobs/status
    - jobs
    - jobs/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - ingresses
    - ingresses/status
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicasets/status
    - replicationcontrollers/scale
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    - poddisruptionbudgets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - ingresses/status
    - networkpolicies
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - authorization.k8s.io
    resources:
    - localsubjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - rolebindings
    - roles
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    creationTimestamp: "2024-10-09T19:32:37Z"
    labels:
      app.kubernetes.io/instance: aws-vpc-cni
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: aws-node
      app.kubernetes.io/version: v1.18.3
      helm.sh/chart: aws-vpc-cni-1.18.3
      k8s-app: aws-node
    name: aws-node
    resourceVersion: "611"
    uid: 65f0eb84-c01a-4061-86df-07e8c41cb5ac
  rules:
  - apiGroups:
    - crd.k8s.amazonaws.com
    resources:
    - eniconfigs
    verbs:
    - list
    - watch
    - get
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - list
    - watch
    - get
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - list
    - watch
    - get
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - watch
    - get
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - list
  - apiGroups:
    - networking.k8s.aws
    resources:
    - policyendpoints
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.aws
    resources:
    - policyendpoints/status
    verbs:
    - get
  - apiGroups:
    - vpcresources.k8s.aws
    resources:
    - cninodes
    verbs:
    - get
    - list
    - watch
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: cluster-admin
    resourceVersion: "70"
    uid: 0dad7da9-b29a-4ac4-881f-9972f1231453
  rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - '*'
  - nonResourceURLs:
    - '*'
    verbs:
    - '*'
- aggregationRule:
    clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-edit: "true"
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-admin: "true"
    name: edit
    resourceVersion: "348"
    uid: 3e987768-f19a-40bd-8b14-8b44d3f80b3f
  rules:
  - apiGroups:
    - ""
    resources:
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    - secrets
    - services/proxy
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - impersonate
  - apiGroups:
    - ""
    resources:
    - pods
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - configmaps
    - events
    - persistentvolumeclaims
    - replicationcontrollers
    - replicationcontrollers/scale
    - secrets
    - serviceaccounts
    - services
    - services/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - replicasets
    - replicasets/scale
    - statefulsets
    - statefulsets/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - ingresses
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicationcontrollers/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - networkpolicies
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - persistentvolumeclaims
    - persistentvolumeclaims/status
    - pods
    - replicationcontrollers
    - replicationcontrollers/scale
    - serviceaccounts
    - services
    - services/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - events
    - limitranges
    - namespaces/status
    - pods/log
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - replicasets
    - replicasets/scale
    - replicasets/status
    - statefulsets
    - statefulsets/scale
    - statefulsets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    - horizontalpodautoscalers/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - cronjobs/status
    - jobs
    - jobs/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - ingresses
    - ingresses/status
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicasets/status
    - replicationcontrollers/scale
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    - poddisruptionbudgets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - ingresses/status
    - networkpolicies
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:addon-manager"},"rules":[{"apiGroups":["crd.k8s.amazonaws.com"],"resources":["eniconfigs"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["pods","namespaces"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["nodes"],"verbs":["get","list","update","watch"]},{"apiGroups":["extensions"],"resources":["*"],"verbs":["list","watch"]},{"apiGroups":["rbac.authorization.k8s.io"],"resourceNames":["aws-node","system:coredns","eks:kube-proxy","ebs-csi-provisioner-binding","ebs-csi-node-binding","ebs-csi-attacher-binding","ebs-csi-snapshotter-binding","ebs-csi-resizer-binding","ebs-csi-node-getter-binding"],"resources":["clusterrolebindings"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["rbac.authorization.k8s.io"],"resourceNames":["aws-node","system:coredns","ebs-external-attacher-role","ebs-csi-node-role","ebs-external-provisioner-role","ebs-external-snapshotter-role","ebs-external-resizer-role"],"resources":["clusterroles"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["apiextensions.k8s.io"],"resourceNames":["eniconfigs.crd.k8s.amazonaws.com"],"resources":["customresourcedefinitions"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":[""],"resources":["endpoints"],"verbs":["list","watch"]},{"apiGroups":[""],"resources":["events"],"verbs":["list","watch","create","patch","update"]},{"apiGroups":[""],"resources":["services"],"verbs":["list","watch"]},{"apiGroups":[""],"resources":["secrets"],"verbs":["get","list"]},{"apiGroups":["discovery.k8s.io"],"resources":["endpointslices"],"verbs":["list","watch"]},{"apiGroups":["events.k8s.io"],"resources":["events"],"verbs":["list","watch","create","patch","update"]},{"apiGroups":["apps"],"resources":["replicasets"],"verbs":["get","list","watch"]},{"apiGroups":["storage.k8s.io"],"resourceNames":["ebs.csi.aws.com"],"resources":["csidrivers"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":[""],"resources":["persistentvolumes"],"verbs":["create","delete","get","list","watch","update","patch"]},{"apiGroups":[""],"resources":["persistentvolumeclaims"],"verbs":["get","list","watch","update"]},{"apiGroups":[""],"resources":["persistentvolumeclaims/status"],"verbs":["update","patch"]},{"apiGroups":["csi.storage.k8s.io"],"resources":["csinodeinfos"],"verbs":["get","list","watch"]},{"apiGroups":["storage.k8s.io"],"resources":["storageclasses"],"verbs":["get","list","watch"]},{"apiGroups":["storage.k8s.io"],"resources":["volumeattachments"],"verbs":["get","list","watch","update","patch"]},{"apiGroups":["storage.k8s.io"],"resources":["volumeattachments/status"],"verbs":["patch"]},{"apiGroups":["snapshot.storage.k8s.io"],"resources":["volumesnapshots"],"verbs":["get","list"]},{"apiGroups":["snapshot.storage.k8s.io"],"resources":["volumesnapshotcontents"],"verbs":["create","get","list","watch","update","delete","patch"]},{"apiGroups":["snapshot.storage.k8s.io"],"resources":["volumesnapshotclasses"],"verbs":["get","list","watch"]},{"apiGroups":["snapshot.storage.k8s.io"],"resources":["volumesnapshotcontents/status"],"verbs":["update"]},{"apiGroups":["storage.k8s.io"],"resources":["csinodes"],"verbs":["get","list","watch"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["get","watch","list","delete","update","create"]},{"apiGroups":["storage.k8s.io"],"resources":["volumeattachments"],"verbs":["get","list","watch"]}]}
    creationTimestamp: "2024-10-09T19:31:02Z"
    name: eks:addon-manager
    resourceVersion: "258"
    uid: 44efc778-6369-4ec4-bd45-398f4cb1e1ce
  rules:
  - apiGroups:
    - crd.k8s.amazonaws.com
    resources:
    - eniconfigs
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - extensions
    resources:
    - '*'
    verbs:
    - list
    - watch
  - apiGroups:
    - rbac.authorization.k8s.io
    resourceNames:
    - aws-node
    - system:coredns
    - eks:kube-proxy
    - ebs-csi-provisioner-binding
    - ebs-csi-node-binding
    - ebs-csi-attacher-binding
    - ebs-csi-snapshotter-binding
    - ebs-csi-resizer-binding
    - ebs-csi-node-getter-binding
    resources:
    - clusterrolebindings
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - rbac.authorization.k8s.io
    resourceNames:
    - aws-node
    - system:coredns
    - ebs-external-attacher-role
    - ebs-csi-node-role
    - ebs-external-provisioner-role
    - ebs-external-snapshotter-role
    - ebs-external-resizer-role
    resources:
    - clusterroles
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - apiextensions.k8s.io
    resourceNames:
    - eniconfigs.crd.k8s.amazonaws.com
    resources:
    - customresourcedefinitions
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - list
    - watch
    - create
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
    - list
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - list
    - watch
  - apiGroups:
    - events.k8s.io
    resources:
    - events
    verbs:
    - list
    - watch
    - create
    - patch
    - update
  - apiGroups:
    - apps
    resources:
    - replicasets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resourceNames:
    - ebs.csi.aws.com
    resources:
    - csidrivers
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - create
    - delete
    - get
    - list
    - watch
    - update
    - patch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - watch
    - update
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims/status
    verbs:
    - update
    - patch
  - apiGroups:
    - csi.storage.k8s.io
    resources:
    - csinodeinfos
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - volumeattachments
    verbs:
    - get
    - list
    - watch
    - update
    - patch
  - apiGroups:
    - storage.k8s.io
    resources:
    - volumeattachments/status
    verbs:
    - patch
  - apiGroups:
    - snapshot.storage.k8s.io
    resources:
    - volumesnapshots
    verbs:
    - get
    - list
  - apiGroups:
    - snapshot.storage.k8s.io
    resources:
    - volumesnapshotcontents
    verbs:
    - create
    - get
    - list
    - watch
    - update
    - delete
    - patch
  - apiGroups:
    - snapshot.storage.k8s.io
    resources:
    - volumesnapshotclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - snapshot.storage.k8s.io
    resources:
    - volumesnapshotcontents/status
    verbs:
    - update
  - apiGroups:
    - storage.k8s.io
    resources:
    - csinodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - get
    - watch
    - list
    - delete
    - update
    - create
  - apiGroups:
    - storage.k8s.io
    resources:
    - volumeattachments
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:az-poller"},"rules":[{"apiGroups":[""],"resourceNames":["kubernetes"],"resources":["endpoints"],"verbs":["get","patch"]},{"apiGroups":[""],"resources":["services"],"verbs":["list","patch","get"]},{"apiGroups":[""],"resources":["nodes"],"verbs":["get","list","patch"]}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:az-poller
    resourceVersion: "203"
    uid: 7bb6ecc4-7dee-4c35-bf48-d1832e46c923
  rules:
  - apiGroups:
    - ""
    resourceNames:
    - kubernetes
    resources:
    - endpoints
    verbs:
    - get
    - patch
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - list
    - patch
    - get
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:certificate-controller-approver"},"rules":[{"apiGroups":["certificates.k8s.io"],"resourceNames":["kubernetes.io/kubelet-serving"],"resources":["signers"],"verbs":["approve"]}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:certificate-controller-approver
    resourceVersion: "207"
    uid: 95f97f04-cc8d-4f61-ac76-b919d6840b4b
  rules:
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kubelet-serving
    resources:
    - signers
    verbs:
    - approve
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:certificate-controller-manager"},"rules":[{"apiGroups":[""],"resources":["nodes"],"verbs":["get","list","watch"]}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:certificate-controller-manager
    resourceVersion: "209"
    uid: 892db01f-123b-45a9-9f2f-834eb9b185a9
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:certificate-controller-signer"},"rules":[{"apiGroups":["certificates.k8s.io"],"resourceNames":["beta.eks.amazonaws.com/app-serving"],"resources":["signers"],"verbs":["sign"]}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:certificate-controller-signer
    resourceVersion: "208"
    uid: ed6ba821-c82e-4c79-82ce-8dc533b1b298
  rules:
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - beta.eks.amazonaws.com/app-serving
    resources:
    - signers
    verbs:
    - sign
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:cloud-controller-manager"},"rules":[{"apiGroups":[""],"resources":["events"],"verbs":["create","patch","update"]},{"apiGroups":[""],"resources":["nodes"],"verbs":["*"]},{"apiGroups":[""],"resources":["nodes/status"],"verbs":["patch"]},{"apiGroups":[""],"resources":["services"],"verbs":["list","patch","update","watch"]},{"apiGroups":[""],"resources":["services/status"],"verbs":["list","patch","update","watch"]},{"apiGroups":[""],"resources":["serviceaccounts"],"verbs":["create","get"]},{"apiGroups":[""],"resources":["persistentvolumes"],"verbs":["get","list","update","watch"]},{"apiGroups":[""],"resources":["endpoints"],"verbs":["create","get","list","watch","update"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create","get","list","watch","update"]},{"apiGroups":[""],"resources":["serviceaccounts/token"],"verbs":["create"]}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:cloud-controller-manager
    resourceVersion: "200"
    uid: 9889377f-d3d9-42b3-94e8-39fb96391255
  rules:
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - '*'
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - services/status
    verbs:
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - create
    - get
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - create
    - get
    - list
    - watch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - get
    - list
    - watch
    - update
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:cloud-provider-extraction-migration"},"rules":[{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create"]},{"apiGroups":["coordination.k8s.io"],"resourceNames":["cloud-provider-extraction-migration"],"resources":["leases"],"verbs":["create","list","get","update"]}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:cloud-provider-extraction-migration
    resourceVersion: "237"
    uid: 56c5fcf2-96f7-436e-a63c-872f83612299
  rules:
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - cloud-provider-extraction-migration
    resources:
    - leases
    verbs:
    - create
    - list
    - get
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:cluster-event-watcher"},"rules":[{"apiGroups":[""],"resources":["pods","nodes"],"verbs":["get","list","watch"]}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:cluster-event-watcher
    resourceVersion: "216"
    uid: fec241e4-e151-4abc-9b9b-5af37147602a
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    - nodes
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:coredns-autoscaler"},"rules":[{"apiGroups":[""],"resources":["nodes"],"verbs":["list","watch"]}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:coredns-autoscaler
    resourceVersion: "218"
    uid: fbad2363-7aa4-4953-b729-a14344abcd54
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:fargate-manager"},"rules":[{"apiGroups":[""],"resources":["pods"],"verbs":["get","list","watch","delete"]},{"apiGroups":[""],"resources":["nodes"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["pods/eviction"],"verbs":["create"]}]}
    creationTimestamp: "2024-10-09T19:31:02Z"
    name: eks:fargate-manager
    resourceVersion: "275"
    uid: b39c7573-77dd-4570-a264-d2c015932e73
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
    - delete
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:fargate-scheduler"},"rules":[{"apiGroups":[""],"resources":["pods","persistentvolumes","persistentvolumeclaims"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["pods/status"],"verbs":["get","list","watch","update"]},{"apiGroups":[""],"resources":["configmaps"],"verbs":["get","list","watch","create"]},{"apiGroups":[""],"resourceNames":["fargate-scheduler"],"resources":["configmaps"],"verbs":["update"]},{"apiGroups":["coordination.k8s.io"],"resourceNames":["fargate-scheduler"],"resources":["leases"],"verbs":["get","update"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create"]},{"apiGroups":[""],"resources":["pods/binding"],"verbs":["create"]},{"apiGroups":[""],"resources":["nodes"],"verbs":["get","list","watch","delete"]},{"apiGroups":["events.k8s.io",""],"resources":["events"],"verbs":["create"]}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:fargate-scheduler
    resourceVersion: "222"
    uid: cfd7b7cc-83b4-4296-8eae-96c4a09e169e
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    - persistentvolumes
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - get
    - list
    - watch
    - update
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
    - create
  - apiGroups:
    - ""
    resourceNames:
    - fargate-scheduler
    resources:
    - configmaps
    verbs:
    - update
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - fargate-scheduler
    resources:
    - leases
    verbs:
    - get
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - pods/binding
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
    - delete
  - apiGroups:
    - events.k8s.io
    - ""
    resources:
    - events
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:k8s-metrics"},"rules":[{"apiGroups":[""],"resources":["endpoints","pods","nodes"],"verbs":["list","watch"]},{"apiGroups":["apps"],"resources":["deployments"],"verbs":["list"]},{"nonResourceURLs":["/metrics","/metrics/slis","/debug/api_priority_and_fairness/*"],"verbs":["get"]}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:k8s-metrics
    resourceVersion: "226"
    uid: acad3cea-260a-49b1-84d8-ce8a6f76b6f1
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - pods
    - nodes
    verbs:
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - deployments
    verbs:
    - list
  - nonResourceURLs:
    - /metrics
    - /metrics/slis
    - /debug/api_priority_and_fairness/*
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"creationTimestamp":null,"labels":{"app.kubernetes.io/name":"amazon-network-policy-controller-k8s"},"name":"eks:network-policy-controller"},"rules":[{"apiGroups":[""],"resources":["namespaces"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["pods"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["services"],"verbs":["get","list","watch"]},{"apiGroups":["networking.k8s.aws"],"resources":["policyendpoints"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["networking.k8s.aws"],"resources":["policyendpoints/finalizers"],"verbs":["update"]},{"apiGroups":["networking.k8s.aws"],"resources":["policyendpoints/status"],"verbs":["get","patch","update"]},{"apiGroups":["networking.k8s.io"],"resources":["networkpolicies"],"verbs":["get","list","patch","update","watch"]}]}
    creationTimestamp: "2024-10-09T19:31:03Z"
    labels:
      app.kubernetes.io/name: amazon-network-policy-controller-k8s
    name: eks:network-policy-controller
    resourceVersion: "313"
    uid: 0db86f7a-c847-42f2-9f13-dcd6261e99dc
  rules:
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.aws
    resources:
    - policyendpoints
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - networking.k8s.aws
    resources:
    - policyendpoints/finalizers
    verbs:
    - update
  - apiGroups:
    - networking.k8s.aws
    resources:
    - policyendpoints/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - networkpolicies
    verbs:
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"labels":{"eks.amazonaws.com/component":"node"},"name":"eks:node-bootstrapper"},"rules":[{"apiGroups":["certificates.k8s.io"],"resources":["certificatesigningrequests/selfnodeserver"],"verbs":["create"]}]}
    creationTimestamp: "2024-10-09T19:31:02Z"
    labels:
      eks.amazonaws.com/component: node
    name: eks:node-bootstrapper
    resourceVersion: "279"
    uid: 407eaef2-00bf-4660-950a-e4b4df24d1ed
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests/selfnodeserver
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:node-manager"},"rules":[{"apiGroups":[""],"resources":["pods"],"verbs":["get","list","watch","delete"]},{"apiGroups":[""],"resources":["nodes"],"verbs":["get","list","watch","patch"]},{"apiGroups":[""],"resources":["pods/eviction"],"verbs":["create"]},{"apiGroups":["apps"],"resourceNames":["aws-node"],"resources":["daemonsets"],"verbs":["get"]}]}
    creationTimestamp: "2024-10-09T19:31:02Z"
    name: eks:node-manager
    resourceVersion: "253"
    uid: 23c6dea2-0362-4389-a235-0a7efde35890
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
    - delete
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
    - patch
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
    - apps
    resourceNames:
    - aws-node
    resources:
    - daemonsets
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:nodewatcher"},"rules":[{"apiGroups":[""],"resources":["nodes"],"verbs":["get","watch","list"]}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:nodewatcher
    resourceVersion: "228"
    uid: 028e1d82-f146-477e-a0c9-3a8134a8c99b
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - watch
    - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:pod-identity-mutating-webhook"},"rules":[{"apiGroups":[""],"resources":["serviceaccounts"],"verbs":["get","watch","list"]}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:pod-identity-mutating-webhook
    resourceVersion: "230"
    uid: 509c5ff1-852c-43dd-98d2-d42a4a76eb80
  rules:
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - get
    - watch
    - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:service-operations"},"rules":[{"nonResourceURLs":["/healthz*","/readyz*","/metrics*","/debug/api_priority_and_fairness/*"],"verbs":["get"]},{"apiGroups":[""],"resources":["endpoints","persistentvolumeclaims","persistentvolumeclaims/status","pods","replicationcontrollers","replicationcontrollers/scale","serviceaccounts","services","services/status","bindings","events","limitranges","namespaces/status","pods/status","replicationcontrollers/status","resourcequotas","resourcequotas/status","namespaces","nodes","nodes/status"],"verbs":["get","list","watch"]},{"apiGroups":["events.k8s.io"],"resources":["events"],"verbs":["get","list","watch"]},{"apiGroups":["discovery.k8s.io"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["apps"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["autoscaling"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["batch"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["extensions"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["policy"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["networking.k8s.io"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["coordination.k8s.io"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["rbac.authorization.k8s.io"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["storage.k8s.io"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["certificates.k8s.io"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["admissionregistration.k8s.io"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["apiextensions.k8s.io"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["apiregistration.k8s.io"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["policy"],"resources":["podsecuritypolicies"],"verbs":["get","list","watch"]},{"apiGroups":["node.k8s.io"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["flowcontrol.apiserver.k8s.io"],"resources":["*"],"verbs":["get","list","watch"]},{"apiGroups":["scheduling.k8s.io"],"resources":["*"],"verbs":["get","list"]},{"apiGroups":["crd.k8s.amazonaws.com"],"resources":["eniconfigs"],"verbs":["get","list","watch"]},{"apiGroups":["vpcresources.k8s.aws"],"resources":["securitygrouppolicies","cninodes"],"verbs":["get","list","watch"]},{"apiGroups":["networking.k8s.aws"],"resources":["policyendpoints"],"verbs":["get","list","watch"]}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:service-operations
    resourceVersion: "232"
    uid: 9b9fe267-dc0d-4f29-8918-a8abffef82f7
  rules:
  - nonResourceURLs:
    - /healthz*
    - /readyz*
    - /metrics*
    - /debug/api_priority_and_fairness/*
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - endpoints
    - persistentvolumeclaims
    - persistentvolumeclaims/status
    - pods
    - replicationcontrollers
    - replicationcontrollers/scale
    - serviceaccounts
    - services
    - services/status
    - bindings
    - events
    - limitranges
    - namespaces/status
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    - namespaces
    - nodes
    - nodes/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - events.k8s.io
    resources:
    - events
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - coordination.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - certificates.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apiregistration.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - podsecuritypolicies
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - node.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - flowcontrol.apiserver.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - scheduling.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
  - apiGroups:
    - crd.k8s.amazonaws.com
    resources:
    - eniconfigs
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - vpcresources.k8s.aws
    resources:
    - securitygrouppolicies
    - cninodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.aws
    resources:
    - policyendpoints
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"eks:tagging-controller"},"rules":[{"apiGroups":[""],"resources":["nodes"],"verbs":["get","patch"]}]}
    creationTimestamp: "2024-10-09T19:30:59Z"
    name: eks:tagging-controller
    resourceVersion: "238"
    uid: c015dad5-cf48-417c-9c05-7f53f581a048
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      meta.helm.sh/release-name: ingress-nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2024-10-11T04:20:10Z"
    labels:
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.8.1
      helm.sh/chart: ingress-nginx-4.7.1
    name: ingress-nginx
    resourceVersion: "332711"
    uid: 66298957-2000-4e4a-89a0-aa5028697abe
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - nodes
    - pods
    - secrets
    - namespaces
    verbs:
    - list
    - watch
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses/status
    verbs:
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingressclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - list
    - watch
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      meta.helm.sh/release-name: ai-runtime-security
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2024-10-11T04:20:03Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: pan-cni-crole
    resourceVersion: "332623"
    uid: 4eb597e3-c043-4b7d-a49c-ed4c52e53ec5
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    - namespaces
    - services
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - update
  - apiGroups:
    - paloaltonetworks.com
    resources:
    - portinfos
    verbs:
    - get
    - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-admin: "true"
    name: system:aggregate-to-admin
    resourceVersion: "78"
    uid: dfdc324a-2678-46b1-a6fc-d60611c7ff01
  rules:
  - apiGroups:
    - authorization.k8s.io
    resources:
    - localsubjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - rolebindings
    - roles
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-edit: "true"
    name: system:aggregate-to-edit
    resourceVersion: "79"
    uid: 4413a62a-5985-4ef7-b342-d4410fc8edb2
  rules:
  - apiGroups:
    - ""
    resources:
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    - secrets
    - services/proxy
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - impersonate
  - apiGroups:
    - ""
    resources:
    - pods
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - configmaps
    - events
    - persistentvolumeclaims
    - replicationcontrollers
    - replicationcontrollers/scale
    - secrets
    - serviceaccounts
    - services
    - services/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - replicasets
    - replicasets/scale
    - statefulsets
    - statefulsets/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - ingresses
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicationcontrollers/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - networkpolicies
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-view: "true"
    name: system:aggregate-to-view
    resourceVersion: "80"
    uid: 77be8ad4-ba7a-45fe-b733-70a4430f68b3
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - persistentvolumeclaims
    - persistentvolumeclaims/status
    - pods
    - replicationcontrollers
    - replicationcontrollers/scale
    - serviceaccounts
    - services
    - services/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - events
    - limitranges
    - namespaces/status
    - pods/log
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - replicasets
    - replicasets/scale
    - replicasets/status
    - statefulsets
    - statefulsets/scale
    - statefulsets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    - horizontalpodautoscalers/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - cronjobs/status
    - jobs
    - jobs/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - ingresses
    - ingresses/status
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicasets/status
    - replicationcontrollers/scale
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    - poddisruptionbudgets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - ingresses/status
    - networkpolicies
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:auth-delegator
    resourceVersion: "86"
    uid: 03b64c1b-78e8-4999-9373-33ae45bdb0ea
  rules:
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:basic-user
    resourceVersion: "73"
    uid: 1c7c247e-96cd-4c37-9db8-2e9a20e6ff3f
  rules:
  - apiGroups:
    - authorization.k8s.io
    resources:
    - selfsubjectaccessreviews
    - selfsubjectrulesreviews
    verbs:
    - create
  - apiGroups:
    - authentication.k8s.io
    resources:
    - selfsubjectreviews
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:certificatesigningrequests:nodeclient
    resourceVersion: "91"
    uid: 4f93095f-6b4b-454a-a452-4b812eeb8754
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests/nodeclient
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:certificatesigningrequests:selfnodeclient
    resourceVersion: "92"
    uid: e820315e-86c8-4c11-b214-f03365fe55ad
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests/selfnodeclient
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:kube-apiserver-client-approver
    resourceVersion: "96"
    uid: 1e3b9cbf-6fdd-42b4-aee7-78b11099c911
  rules:
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kube-apiserver-client
    resources:
    - signers
    verbs:
    - approve
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:kube-apiserver-client-kubelet-approver
    resourceVersion: "97"
    uid: 38b95be7-8518-4e42-8834-1c554c641490
  rules:
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kube-apiserver-client-kubelet
    resources:
    - signers
    verbs:
    - approve
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:kubelet-serving-approver
    resourceVersion: "95"
    uid: 9434b8a0-3c0c-4644-a247-9d71df0b4036
  rules:
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kubelet-serving
    resources:
    - signers
    verbs:
    - approve
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:legacy-unknown-approver
    resourceVersion: "94"
    uid: 4837b544-4ab4-4d93-8c15-f2b3da5c570b
  rules:
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/legacy-unknown
    resources:
    - signers
    verbs:
    - approve
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:attachdetach-controller
    resourceVersion: "101"
    uid: 3396e726-fa4e-44d2-b3cf-0edc5ab6142f
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    - persistentvolumes
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - storage.k8s.io
    resources:
    - volumeattachments
    verbs:
    - create
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - csidrivers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - csinodes
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:certificate-controller
    resourceVersion: "127"
    uid: 1ea1652f-471b-4ed3-9feb-f3012f4973c3
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests
    verbs:
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests/approval
    - certificatesigningrequests/status
    verbs:
    - update
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kube-apiserver-client-kubelet
    resources:
    - signers
    verbs:
    - approve
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kube-apiserver-client
    - kubernetes.io/kube-apiserver-client-kubelet
    - kubernetes.io/kubelet-serving
    - kubernetes.io/legacy-unknown
    resources:
    - signers
    verbs:
    - sign
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:clusterrole-aggregation-controller
    resourceVersion: "102"
    uid: 75f61a8d-0d28-407b-b855-a3bca0e5c81f
  rules:
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - clusterroles
    verbs:
    - escalate
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:cronjob-controller
    resourceVersion: "103"
    uid: 85d3d51e-ea7d-4440-87ea-4201779823d5
  rules:
  - apiGroups:
    - batch
    resources:
    - cronjobs
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - batch
    resources:
    - jobs
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs/status
    verbs:
    - update
  - apiGroups:
    - batch
    resources:
    - cronjobs/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - delete
    - list
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:daemon-set-controller
    resourceVersion: "104"
    uid: c5a17c22-8aca-4ecf-8c3b-c73bceed6960
  rules:
  - apiGroups:
    - apps
    - extensions
    resources:
    - daemonsets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - daemonsets/status
    verbs:
    - update
  - apiGroups:
    - apps
    - extensions
    resources:
    - daemonsets/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - list
    - patch
    - watch
  - apiGroups:
    - ""
    resources:
    - pods/binding
    verbs:
    - create
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:deployment-controller
    resourceVersion: "105"
    uid: 30510869-caf3-4820-bbb8-28cb3eb2e935
  rules:
  - apiGroups:
    - apps
    - extensions
    resources:
    - deployments
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - deployments/status
    verbs:
    - update
  - apiGroups:
    - apps
    - extensions
    resources:
    - deployments/finalizers
    verbs:
    - update
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:disruption-controller
    resourceVersion: "106"
    uid: c3d88d04-4b1e-4685-9f71-d769d738f2b3
  rules:
  - apiGroups:
    - apps
    - extensions
    resources:
    - deployments
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
    - update
  - apiGroups:
    - '*'
    resources:
    - '*/scale'
    verbs:
    - get
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:endpoint-controller
    resourceVersion: "107"
    uid: 4ab7c6d1-cca3-42d3-ac9f-e0cb735bb576
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - create
    - delete
    - get
    - list
    - update
  - apiGroups:
    - ""
    resources:
    - endpoints/restricted
    verbs:
    - create
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:endpointslice-controller
    resourceVersion: "108"
    uid: c927568f-1339-4257-8982-6a2b2774267b
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    - pods
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - services/finalizers
    verbs:
    - update
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - create
    - delete
    - get
    - list
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:endpointslicemirroring-controller
    resourceVersion: "109"
    uid: 600bcdae-0597-4726-a91f-7c3ce09872a8
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - services/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - endpoints/finalizers
    verbs:
    - update
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - create
    - delete
    - get
    - list
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:ephemeral-volume-controller
    resourceVersion: "111"
    uid: 0d3aadae-75d0-42f0-89da-fd0662de54f0
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - create
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:expand-controller
    resourceVersion: "110"
    uid: 1081a2a2-c714-4e35-91bb-ea31be656307
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:generic-garbage-collector
    resourceVersion: "112"
    uid: 7971c7d8-fc09-40ee-b514-2dd39748e5ae
  rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:horizontal-pod-autoscaler
    resourceVersion: "113"
    uid: 9f342533-3848-4645-a768-da50703e0cc8
  rules:
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers/status
    verbs:
    - update
  - apiGroups:
    - '*'
    resources:
    - '*/scale'
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - list
  - apiGroups:
    - metrics.k8s.io
    resources:
    - pods
    verbs:
    - list
  - apiGroups:
    - custom.metrics.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
  - apiGroups:
    - external.metrics.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:job-controller
    resourceVersion: "114"
    uid: b4889358-cb51-4c4d-8ba1-1aab27efca4d
  rules:
  - apiGroups:
    - batch
    resources:
    - jobs
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - batch
    resources:
    - jobs/status
    verbs:
    - update
  - apiGroups:
    - batch
    resources:
    - jobs/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - list
    - patch
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:legacy-service-account-token-cleaner
    resourceVersion: "133"
    uid: 25a91383-734f-4900-ae12-fc8dc49b235a
  rules:
  - apiGroups:
    - ""
    resourceNames:
    - kube-apiserver-legacy-service-account-token-tracking
    resources:
    - configmaps
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - delete
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:namespace-controller
    resourceVersion: "115"
    uid: 9bd24682-6181-4ada-bfe4-cfb0b94b1339
  rules:
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces/finalize
    - namespaces/status
    verbs:
    - update
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - delete
    - deletecollection
    - get
    - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:node-controller
    resourceVersion: "116"
    uid: e75a905b-d04c-44cd-8997-73322a08c16b
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - delete
    - get
    - list
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - delete
    - get
    - list
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:persistent-volume-binder
    resourceVersion: "117"
    uid: 05f9f88f-6533-4463-8fb3-48d9c17b17e0
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - create
    - delete
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumes/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - create
    - delete
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - create
    - delete
    - get
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:pod-garbage-collector
    resourceVersion: "118"
    uid: f47b15f8-27ea-4759-b6aa-fe5276b578e9
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - delete
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:pv-protection-controller
    resourceVersion: "129"
    uid: 20cd66a6-2175-4544-8084-60436eca57d6
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:pvc-protection-controller
    resourceVersion: "128"
    uid: a559940d-003e-4c27-a3fa-e28580b423b5
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:replicaset-controller
    resourceVersion: "119"
    uid: 96ed2b7c-6637-467b-8dd9-df66878bbeaa
  rules:
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets/status
    verbs:
    - update
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - list
    - patch
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:replication-controller
    resourceVersion: "120"
    uid: 56723f88-9289-4500-b8e0-1b64a6b5d1b3
  rules:
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - list
    - patch
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:resourcequota-controller
    resourceVersion: "121"
    uid: 0981825b-426a-4028-b213-7b433ba68844
  rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - resourcequotas/status
    verbs:
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:root-ca-cert-publisher
    resourceVersion: "131"
    uid: 6f281918-d98a-4cc5-a22e-1ca6d9d83c96
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - create
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:route-controller
    resourceVersion: "122"
    uid: 2cdca237-7879-4a57-8b24-33ce561cfc1b
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:service-account-controller
    resourceVersion: "123"
    uid: 9743dd7f-38a5-4e05-afdd-4b7223d1b8ff
  rules:
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - create
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:service-controller
    resourceVersion: "124"
    uid: 71585c69-0a74-4847-94c7-e160e263a7db
  rules:
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - services/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:statefulset-controller
    resourceVersion: "125"
    uid: 3d0c450d-4970-403e-a125-960363d98ea8
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets/status
    verbs:
    - update
  - apiGroups:
    - apps
    resources:
    - statefulsets/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - get
    - patch
    - update
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - create
    - get
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - delete
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:ttl-after-finished-controller
    resourceVersion: "130"
    uid: 012cbb27-8d9a-40d7-9c79-24fa1fb65c72
  rules:
  - apiGroups:
    - batch
    resources:
    - jobs
    verbs:
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:ttl-controller
    resourceVersion: "126"
    uid: 24b6a2fd-8292-4e9d-9865-ce80b84935ea
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:validatingadmissionpolicy-status-controller
    resourceVersion: "132"
    uid: def994c9-1596-4e6a-bc7d-e258ba428a59
  rules:
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - validatingadmissionpolicies
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - validatingadmissionpolicies/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    creationTimestamp: "2024-10-09T19:32:36Z"
    labels:
      eks.amazonaws.com/component: coredns
      k8s-app: kube-dns
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:coredns
    resourceVersion: "575"
    uid: 38e8042f-19ad-463c-be94-08143283f54e
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    - pods
    - namespaces
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:discovery
    resourceVersion: "71"
    uid: 653143ef-b170-41ef-9354-9527a7898840
  rules:
  - nonResourceURLs:
    - /api
    - /api/*
    - /apis
    - /apis/*
    - /healthz
    - /livez
    - /openapi
    - /openapi/*
    - /readyz
    - /version
    - /version/
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:heapster
    resourceVersion: "81"
    uid: 9bb999c5-0797-4144-9cb3-86fc7b4c0a3c
  rules:
  - apiGroups:
    - ""
    resources:
    - events
    - namespaces
    - nodes
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - deployments
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-aggregator
    resourceVersion: "87"
    uid: 5d7fe1e1-1bf4-4bde-8b5a-e913f7a75fae
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-controller-manager
    resourceVersion: "88"
    uid: 82358867-b8ab-41e3-b586-4a0123d1a8ef
  rules:
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - kube-controller-manager
    resources:
    - leases
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - secrets
    - serviceaccounts
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - delete
  - apiGroups:
    - ""
    resources:
    - configmaps
    - namespaces
    - secrets
    - serviceaccounts
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - secrets
    - serviceaccounts
    verbs:
    - update
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-dns
    resourceVersion: "89"
    uid: c877057e-ee13-4c93-a554-15cea82d50d8
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-scheduler
    resourceVersion: "100"
    uid: 0bc4e562-a753-4318-bb37-0c12b91c7c67
  rules:
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - kube-scheduler
    resources:
    - leases
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leasecandidates
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - pods/binding
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    - persistentvolumes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - storage.k8s.io
    resources:
    - csinodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - csidrivers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - csistoragecapacities
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kubelet-api-admin
    resourceVersion: "84"
    uid: 9ecf269e-138a-4776-883f-de4bb5cab136
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - proxy
  - apiGroups:
    - ""
    resources:
    - nodes/log
    - nodes/metrics
    - nodes/proxy
    - nodes/stats
    verbs:
    - '*'
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:monitoring
    resourceVersion: "72"
    uid: f60c4907-1d32-4934-9e43-5906b2162bb2
  rules:
  - nonResourceURLs:
    - /healthz
    - /healthz/*
    - /livez
    - /livez/*
    - /metrics
    - /metrics/slis
    - /readyz
    - /readyz/*
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node
    resourceVersion: "82"
    uid: e3043dd5-0fbe-4225-a0d4-691700e8b5fa
  rules:
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - localsubjectaccessreviews
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - create
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - configmaps
    - secrets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    - persistentvolumes
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - get
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests
    verbs:
    - create
    - get
    - list
    - watch
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - delete
    - get
    - patch
    - update
  - apiGroups:
    - storage.k8s.io
    resources:
    - volumeattachments
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - storage.k8s.io
    resources:
    - csidrivers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - csinodes
    verbs:
    - create
    - delete
    - get
    - patch
    - update
  - apiGroups:
    - node.k8s.io
    resources:
    - runtimeclasses
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node-bootstrapper
    resourceVersion: "85"
    uid: a9fb8f40-eefc-4640-b265-79d15e4630f1
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests
    verbs:
    - create
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node-problem-detector
    resourceVersion: "83"
    uid: a5ffaab6-4065-4cdc-9286-74b5434a17e7
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node-proxier
    resourceVersion: "99"
    uid: 69ce64fa-dd37-4994-b2b3-763e796a0cd3
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:persistent-volume-provisioner
    resourceVersion: "90"
    uid: 48c8aa37-3b0f-4784-8bf0-e4fb1e17f246
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - create
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:public-info-viewer
    resourceVersion: "74"
    uid: dc3565f5-c513-4354-90ea-9f1aea1ae116
  rules:
  - nonResourceURLs:
    - /healthz
    - /livez
    - /readyz
    - /version
    - /version/
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:service-account-issuer-discovery
    resourceVersion: "98"
    uid: 8ca19ed7-a95f-4c4a-8b16-c9f8bb88b335
  rules:
  - nonResourceURLs:
    - /.well-known/openid-configuration
    - /.well-known/openid-configuration/
    - /openid/v1/jwks
    - /openid/v1/jwks/
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:volume-scheduler
    resourceVersion: "93"
    uid: 8c6b701c-aea9-40a8-a897-a5f71acb8b22
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - patch
    - update
    - watch
- aggregationRule:
    clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-view: "true"
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-edit: "true"
    name: view
    resourceVersion: "346"
    uid: 89c97b69-ef2b-4e85-9c7f-1401669f53de
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - persistentvolumeclaims
    - persistentvolumeclaims/status
    - pods
    - replicationcontrollers
    - replicationcontrollers/scale
    - serviceaccounts
    - services
    - services/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - events
    - limitranges
    - namespaces/status
    - pods/log
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - replicasets
    - replicasets/scale
    - replicasets/status
    - statefulsets
    - statefulsets/scale
    - statefulsets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    - horizontalpodautoscalers/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - cronjobs/status
    - jobs
    - jobs/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - ingresses
    - ingresses/status
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicasets/status
    - replicationcontrollers/scale
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    - poddisruptionbudgets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - ingresses/status
    - networkpolicies
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"vpc-resource-controller-role"},"rules":[{"apiGroups":[""],"resources":["events"],"verbs":["create","update","patch"]},{"apiGroups":[""],"resources":["nodes"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["nodes/status"],"verbs":["get","patch"]},{"apiGroups":[""],"resources":["pods"],"verbs":["get","list","patch","watch"]},{"apiGroups":[""],"resources":["serviceaccounts"],"verbs":["get","list","watch"]},{"apiGroups":["crd.k8s.amazonaws.com"],"resources":["eniconfigs"],"verbs":["get","list","watch"]},{"apiGroups":["vpcresources.k8s.aws"],"resources":["securitygrouppolicies"],"verbs":["get","list","watch"]},{"apiGroups":["vpcresources.k8s.aws"],"resources":["cninodes"],"verbs":["create","get","list","patch","update","watch"]}]}
    creationTimestamp: "2024-10-09T19:31:03Z"
    name: vpc-resource-controller-role
    resourceVersion: "300"
    uid: 1dc0ea72-1fd6-44cc-a37c-8781e0cde23e
  rules:
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - update
    - patch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - get
    - patch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - patch
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - crd.k8s.amazonaws.com
    resources:
    - eniconfigs
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - vpcresources.k8s.aws
    resources:
    - securitygrouppolicies
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - vpcresources.k8s.aws
    resources:
    - cninodes
    verbs:
    - create
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2024-10-09T19:32:37Z"
    labels:
      app.kubernetes.io/instance: aws-vpc-cni
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: aws-node
      app.kubernetes.io/version: v1.18.3
      helm.sh/chart: aws-vpc-cni-1.18.3
      k8s-app: aws-node
    name: aws-node
    resourceVersion: "612"
    uid: c98d46d6-e299-45ee-ada8-47f93744a929
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: aws-node
  subjects:
  - kind: ServiceAccount
    name: aws-node
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: cluster-admin
    resourceVersion: "134"
    uid: 2d75e90e-349a-43e3-aff7-e38bcc796379
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cluster-admin
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:masters
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:addon-cluster-admin"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"cluster-admin"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:addon-manager"}]}
    creationTimestamp: "2024-10-09T19:31:02Z"
    name: eks:addon-cluster-admin
    resourceVersion: "256"
    uid: e37c17ed-b340-47ff-8813-f03b24c9edd5
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cluster-admin
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:addon-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:addon-manager"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:addon-manager"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:addon-manager"}]}
    creationTimestamp: "2024-10-09T19:31:02Z"
    name: eks:addon-manager
    resourceVersion: "255"
    uid: 067e7300-5ef2-482e-a72c-02588fa4572b
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:addon-manager
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:addon-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:az-poller"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:az-poller"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:az-poller"}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:az-poller
    resourceVersion: "206"
    uid: 1220b65c-beb6-4e09-af83-819de7bb145c
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:az-poller
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:az-poller
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:certificate-controller"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"system:controller:certificate-controller"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:certificate-controller"}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:certificate-controller
    resourceVersion: "211"
    uid: 4bd9b179-654c-4668-998b-538e8eeeb1c0
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:certificate-controller
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:certificate-controller
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:certificate-controller-approver"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:certificate-controller-approver"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:certificate-controller"}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:certificate-controller-approver
    resourceVersion: "212"
    uid: e7f5d7d8-ca35-489b-bf50-0d8f9c1c2e39
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:certificate-controller-approver
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:certificate-controller
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:certificate-controller-manager"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:certificate-controller-manager"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:certificate-controller"}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:certificate-controller-manager
    resourceVersion: "210"
    uid: 02efc795-e5a5-40ef-aa7e-de059a3cb822
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:certificate-controller-manager
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:certificate-controller
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:certificate-controller-signer"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:certificate-controller-signer"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:certificate-controller"}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:certificate-controller-signer
    resourceVersion: "213"
    uid: 48733352-a657-4db2-ab6f-b8be34514554
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:certificate-controller-signer
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:certificate-controller
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:cloud-controller-manager"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:cloud-controller-manager"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:cloud-controller-manager"}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:cloud-controller-manager
    resourceVersion: "201"
    uid: e04ce158-bbbe-4418-ae74-b6f09cd951d6
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:cloud-controller-manager
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:cloud-controller-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:cloud-provider-extraction-migration"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:cloud-provider-extraction-migration"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"system:kube-controller-manager"}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:cloud-provider-extraction-migration
    resourceVersion: "236"
    uid: 71a5c225-db5e-4623-a68e-e6b5c16c717d
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:cloud-provider-extraction-migration
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-controller-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:cluster-event-watcher"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:cluster-event-watcher"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:cluster-event-watcher"}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:cluster-event-watcher
    resourceVersion: "217"
    uid: 115208e2-a34d-4265-823d-1693ceab7f5b
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:cluster-event-watcher
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:cluster-event-watcher
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:coredns-autoscaler"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:coredns-autoscaler"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:coredns-autoscaler"}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:coredns-autoscaler
    resourceVersion: "220"
    uid: cd395980-b46a-4fbf-a870-c0f2aea62bea
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:coredns-autoscaler
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:coredns-autoscaler
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:fargate-manager"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:fargate-manager"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:fargate-manager"}]}
    creationTimestamp: "2024-10-09T19:31:02Z"
    name: eks:fargate-manager
    resourceVersion: "273"
    uid: fafabaea-8c32-4469-8324-f4563099056a
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:fargate-manager
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:fargate-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:fargate-scheduler"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:fargate-scheduler"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:fargate-scheduler"}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:fargate-scheduler
    resourceVersion: "223"
    uid: 66f3769a-eb5c-4418-8a4f-19e3bfc13b82
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:fargate-scheduler
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:fargate-scheduler
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:k8s-metrics"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:k8s-metrics"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:k8s-metrics"}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:k8s-metrics
    resourceVersion: "227"
    uid: 38297bdf-99dc-4dd4-8418-5be288dfe1fa
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:k8s-metrics
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:k8s-metrics
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2024-10-09T19:32:36Z"
    labels:
      eks.amazonaws.com/component: kube-proxy
      k8s-app: kube-proxy
    name: eks:kube-proxy
    resourceVersion: "563"
    uid: 77d2c6f5-4a38-4ba8-889e-37590993e4b6
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node-proxier
  subjects:
  - kind: ServiceAccount
    name: kube-proxy
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:kube-proxy-fargate"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"system:node-proxier"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"Group","name":"system:node-proxier"}]}
    creationTimestamp: "2024-10-09T19:31:02Z"
    name: eks:kube-proxy-fargate
    resourceVersion: "271"
    uid: 53e8c7b1-c0c0-4d9d-ada2-b6a834af2664
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node-proxier
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:node-proxier
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"labels":{"eks.amazonaws.com/component":"kube-proxy","k8s-app":"kube-proxy"},"name":"eks:kube-proxy-windows"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"system:node-proxier"},"subjects":[{"kind":"Group","name":"eks:kube-proxy-windows"}]}
    creationTimestamp: "2024-10-09T19:31:02Z"
    labels:
      eks.amazonaws.com/component: kube-proxy
      k8s-app: kube-proxy
    name: eks:kube-proxy-windows
    resourceVersion: "267"
    uid: fda51a7f-2b95-4574-84c9-d504ced82955
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node-proxier
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: eks:kube-proxy-windows
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"rbac","app.kubernetes.io/created-by":"amazon-network-policy-controller-k8s","app.kubernetes.io/instance":"manager-rolebinding","app.kubernetes.io/name":"amazon-network-policy-controller-k8s","app.kubernetes.io/part-of":"amazon-network-policy-controller-k8s"},"name":"eks:network-policy-controller"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:network-policy-controller"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:network-policy-controller"}]}
    creationTimestamp: "2024-10-09T19:31:03Z"
    labels:
      app.kubernetes.io/component: rbac
      app.kubernetes.io/created-by: amazon-network-policy-controller-k8s
      app.kubernetes.io/instance: manager-rolebinding
      app.kubernetes.io/name: amazon-network-policy-controller-k8s
      app.kubernetes.io/part-of: amazon-network-policy-controller-k8s
    name: eks:network-policy-controller
    resourceVersion: "316"
    uid: 719ff413-1724-4426-b21f-161f2c09c0c1
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:network-policy-controller
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:network-policy-controller
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"labels":{"eks.amazonaws.com/component":"node"},"name":"eks:node-bootstrapper"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:node-bootstrapper"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"Group","name":"system:bootstrappers"},{"apiGroup":"rbac.authorization.k8s.io","kind":"Group","name":"system:nodes"}]}
    creationTimestamp: "2024-10-09T19:31:02Z"
    labels:
      eks.amazonaws.com/component: node
    name: eks:node-bootstrapper
    resourceVersion: "276"
    uid: 64252b67-0872-46d3-a81e-b4462983b38d
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:node-bootstrapper
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:bootstrappers
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:nodes
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:node-manager"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:node-manager"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:node-manager"}]}
    creationTimestamp: "2024-10-09T19:31:01Z"
    name: eks:node-manager
    resourceVersion: "252"
    uid: df7a0791-ae06-4cbe-a809-dcb460be3df8
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:node-manager
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:node-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:nodewatcher"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:nodewatcher"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:nodewatcher"}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:nodewatcher
    resourceVersion: "229"
    uid: c74b84b8-6054-45db-a535-bd25f3441ea6
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:nodewatcher
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:nodewatcher
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:pod-identity-mutating-webhook"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:pod-identity-mutating-webhook"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:pod-identity-mutating-webhook"}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:pod-identity-mutating-webhook
    resourceVersion: "231"
    uid: f31bc4cb-f3c5-43ee-9814-b12fef0d9ff1
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:pod-identity-mutating-webhook
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:pod-identity-mutating-webhook
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:service-operations"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:service-operations"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"Group","name":"eks:service-operations"}]}
    creationTimestamp: "2024-10-09T19:30:58Z"
    name: eks:service-operations
    resourceVersion: "233"
    uid: a0e5cb77-d5ba-427d-80ed-15d56793f2cd
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:service-operations
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: eks:service-operations
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"eks:tagging-controller"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"eks:tagging-controller"},"subjects":[{"kind":"ServiceAccount","name":"tagging-controller","namespace":"kube-system"}]}
    creationTimestamp: "2024-10-09T19:30:59Z"
    name: eks:tagging-controller
    resourceVersion: "239"
    uid: 672ed7cb-0630-4009-a110-c656475dacb1
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks:tagging-controller
  subjects:
  - kind: ServiceAccount
    name: tagging-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      meta.helm.sh/release-name: ingress-nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2024-10-11T04:20:10Z"
    labels:
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.8.1
      helm.sh/chart: ingress-nginx-4.7.1
    name: ingress-nginx
    resourceVersion: "332712"
    uid: bdf593a9-8320-4f72-acf0-87c5eac92aab
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: ingress-nginx
  subjects:
  - kind: ServiceAccount
    name: ingress-nginx
    namespace: ingress-nginx
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      meta.helm.sh/release-name: ai-runtime-security
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2024-10-11T04:20:03Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: pan-cni-crb-kube-system
    resourceVersion: "332624"
    uid: 56f5807b-d8e7-40dc-b114-50ec65e42d72
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: pan-cni-crole
  subjects:
  - kind: ServiceAccount
    name: pan-cni-sa
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:basic-user
    resourceVersion: "137"
    uid: f5293906-43ae-4c3f-89db-cc43e23ea6d1
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:basic-user
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:attachdetach-controller
    resourceVersion: "146"
    uid: ae31a3e2-d14d-4021-ae1b-d433c272e44d
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:attachdetach-controller
  subjects:
  - kind: ServiceAccount
    name: attachdetach-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:certificate-controller
    resourceVersion: "172"
    uid: c677fd63-0fb2-44f5-80a3-ab6cd1172f9b
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:certificate-controller
  subjects:
  - kind: ServiceAccount
    name: certificate-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:clusterrole-aggregation-controller
    resourceVersion: "147"
    uid: b270bf5b-685d-4443-aecd-946cdf4173a6
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:clusterrole-aggregation-controller
  subjects:
  - kind: ServiceAccount
    name: clusterrole-aggregation-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:cronjob-controller
    resourceVersion: "148"
    uid: 6613d8c8-da0b-49a0-8774-f117b4a8deb0
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:cronjob-controller
  subjects:
  - kind: ServiceAccount
    name: cronjob-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:daemon-set-controller
    resourceVersion: "149"
    uid: 0c4c32e8-ad13-4049-afd8-f3afb5026e2d
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:daemon-set-controller
  subjects:
  - kind: ServiceAccount
    name: daemon-set-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:deployment-controller
    resourceVersion: "150"
    uid: 692abb25-7595-4360-90e5-d22fa230bff2
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:deployment-controller
  subjects:
  - kind: ServiceAccount
    name: deployment-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:disruption-controller
    resourceVersion: "151"
    uid: 98cf0177-c0d7-42c7-b9ab-4722c8e31986
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:disruption-controller
  subjects:
  - kind: ServiceAccount
    name: disruption-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:endpoint-controller
    resourceVersion: "152"
    uid: 88b0a00c-f287-4609-9045-a50be39fb90a
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:endpoint-controller
  subjects:
  - kind: ServiceAccount
    name: endpoint-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:endpointslice-controller
    resourceVersion: "153"
    uid: e09fd399-a430-40c4-bcc9-ff71cace1b1f
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:endpointslice-controller
  subjects:
  - kind: ServiceAccount
    name: endpointslice-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:endpointslicemirroring-controller
    resourceVersion: "154"
    uid: de3fae4a-858e-4d67-8492-a09135c33261
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:endpointslicemirroring-controller
  subjects:
  - kind: ServiceAccount
    name: endpointslicemirroring-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:ephemeral-volume-controller
    resourceVersion: "156"
    uid: 24ba6db0-ea12-4dd0-8204-c2d52b92d752
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:ephemeral-volume-controller
  subjects:
  - kind: ServiceAccount
    name: ephemeral-volume-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:expand-controller
    resourceVersion: "155"
    uid: e386317a-0911-4296-95ad-102ed349deb3
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:expand-controller
  subjects:
  - kind: ServiceAccount
    name: expand-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:generic-garbage-collector
    resourceVersion: "157"
    uid: 4979e624-4ac2-494b-8d4e-2117672f3696
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:generic-garbage-collector
  subjects:
  - kind: ServiceAccount
    name: generic-garbage-collector
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:horizontal-pod-autoscaler
    resourceVersion: "158"
    uid: bca614e0-04e8-4e8a-b7ed-91a2735768bd
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:horizontal-pod-autoscaler
  subjects:
  - kind: ServiceAccount
    name: horizontal-pod-autoscaler
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:job-controller
    resourceVersion: "159"
    uid: e7498c67-14f8-411f-ae54-b8af4a488150
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:job-controller
  subjects:
  - kind: ServiceAccount
    name: job-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:legacy-service-account-token-cleaner
    resourceVersion: "178"
    uid: 3d4ef94b-66f7-4170-9a4a-0e0898423165
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:legacy-service-account-token-cleaner
  subjects:
  - kind: ServiceAccount
    name: legacy-service-account-token-cleaner
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:namespace-controller
    resourceVersion: "160"
    uid: e381feb2-076c-420d-b2ae-639f72d08491
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:namespace-controller
  subjects:
  - kind: ServiceAccount
    name: namespace-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:node-controller
    resourceVersion: "161"
    uid: a197b11e-b97c-469d-aa87-7534d048c7c4
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:node-controller
  subjects:
  - kind: ServiceAccount
    name: node-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:persistent-volume-binder
    resourceVersion: "162"
    uid: 3342bb97-e8bc-4359-b49a-8db0f8e2723f
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:persistent-volume-binder
  subjects:
  - kind: ServiceAccount
    name: persistent-volume-binder
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:pod-garbage-collector
    resourceVersion: "163"
    uid: 2f866d3d-101e-4001-a146-2f51988fff89
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:pod-garbage-collector
  subjects:
  - kind: ServiceAccount
    name: pod-garbage-collector
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:pv-protection-controller
    resourceVersion: "174"
    uid: 1b1493f8-7dc3-421d-9b7f-ee9aceb459f1
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:pv-protection-controller
  subjects:
  - kind: ServiceAccount
    name: pv-protection-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:pvc-protection-controller
    resourceVersion: "173"
    uid: ffc03293-8a96-4bc5-bc9c-0d545c8e2ef5
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:pvc-protection-controller
  subjects:
  - kind: ServiceAccount
    name: pvc-protection-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:replicaset-controller
    resourceVersion: "164"
    uid: 374b1c93-b02a-44fe-87d3-b8ac43b3c48a
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:replicaset-controller
  subjects:
  - kind: ServiceAccount
    name: replicaset-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:replication-controller
    resourceVersion: "165"
    uid: 3b1220d3-8ec6-4091-ad10-5b9290f536a3
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:replication-controller
  subjects:
  - kind: ServiceAccount
    name: replication-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:resourcequota-controller
    resourceVersion: "166"
    uid: 73624862-b667-4e49-9b3f-0087f5e1e010
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:resourcequota-controller
  subjects:
  - kind: ServiceAccount
    name: resourcequota-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:root-ca-cert-publisher
    resourceVersion: "176"
    uid: c75e05bf-3461-424f-bcec-8d44fb1fe954
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:root-ca-cert-publisher
  subjects:
  - kind: ServiceAccount
    name: root-ca-cert-publisher
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:route-controller
    resourceVersion: "167"
    uid: 73dac399-0c57-474c-9751-28cc81235a6e
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:route-controller
  subjects:
  - kind: ServiceAccount
    name: route-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:service-account-controller
    resourceVersion: "168"
    uid: 23193305-587c-4193-8238-8fcb6544e7a4
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:service-account-controller
  subjects:
  - kind: ServiceAccount
    name: service-account-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:service-controller
    resourceVersion: "169"
    uid: ad43540f-9bba-4a4f-8176-a2af7fad491b
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:service-controller
  subjects:
  - kind: ServiceAccount
    name: service-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:statefulset-controller
    resourceVersion: "170"
    uid: 5dd233c4-656f-46d5-ac6e-90912b2c8fa3
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:statefulset-controller
  subjects:
  - kind: ServiceAccount
    name: statefulset-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:ttl-after-finished-controller
    resourceVersion: "175"
    uid: 94577403-098f-4466-939b-aafe240e6e9d
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:ttl-after-finished-controller
  subjects:
  - kind: ServiceAccount
    name: ttl-after-finished-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:ttl-controller
    resourceVersion: "171"
    uid: 571c55cd-1105-459d-a3be-883a0834e54e
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:ttl-controller
  subjects:
  - kind: ServiceAccount
    name: ttl-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:validatingadmissionpolicy-status-controller
    resourceVersion: "177"
    uid: ee3af16d-5dc7-4e39-baaa-3d63c9202e05
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:validatingadmissionpolicy-status-controller
  subjects:
  - kind: ServiceAccount
    name: validatingadmissionpolicy-status-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:32:36Z"
    labels:
      eks.amazonaws.com/component: coredns
      k8s-app: kube-dns
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:coredns
    resourceVersion: "576"
    uid: daeb3c87-c0af-4d17-9ffc-443f9ff2aff8
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:coredns
  subjects:
  - kind: ServiceAccount
    name: coredns
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:discovery
    resourceVersion: "136"
    uid: 29745a9a-6571-44d3-b500-a1b1e6e74b1c
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:discovery
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-controller-manager
    resourceVersion: "140"
    uid: 215bc662-5f29-452c-8264-9acce6883b07
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:kube-controller-manager
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-controller-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-dns
    resourceVersion: "141"
    uid: cd7424d0-5183-4ad7-b502-7873da930cd1
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:kube-dns
  subjects:
  - kind: ServiceAccount
    name: kube-dns
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-scheduler
    resourceVersion: "142"
    uid: 48b3ee83-609d-4518-9b39-0feaf8ea6524
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:kube-scheduler
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-scheduler
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:monitoring
    resourceVersion: "135"
    uid: fa6b7b26-9aa9-4142-8ac3-d3678da0f5c6
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:monitoring
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:monitoring
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node
    resourceVersion: "144"
    uid: 9fe824af-94df-426d-9e4d-dd403f166999
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node-proxier
    resourceVersion: "139"
    uid: 0336c0b6-70cd-47b7-b354-c838b7e492c8
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node-proxier
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-proxy
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:public-info-viewer
    resourceVersion: "138"
    uid: a5394864-c24a-4bfb-857f-bb5f0e0c124d
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:public-info-viewer
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:unauthenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:service-account-issuer-discovery
    resourceVersion: "145"
    uid: 18a6e932-ffa4-42e1-a89b-89dc4b0fad81
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:service-account-issuer-discovery
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:serviceaccounts
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-09T19:30:56Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:volume-scheduler
    resourceVersion: "143"
    uid: c5f70153-396b-4519-8acb-99c0ab250b89
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:volume-scheduler
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-scheduler
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"vpc-resource-controller-rolebinding"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"vpc-resource-controller-role"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"eks:vpc-resource-controller"},{"kind":"ServiceAccount","name":"eks-vpc-resource-controller","namespace":"kube-system"}]}
    creationTimestamp: "2024-10-09T19:31:03Z"
    name: vpc-resource-controller-rolebinding
    resourceVersion: "301"
    uid: 664f140e-56c6-449f-80ed-91dd594b835c
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: vpc-resource-controller-role
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: eks:vpc-resource-controller
  - kind: ServiceAccount
    name: eks-vpc-resource-controller
    namespace: kube-system
kind: List
metadata:
  resourceVersion: ""
